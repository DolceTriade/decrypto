{"version":3,"sources":["components/lobby.js","components/game.js","index.js"],"names":["Lobby","props","state","s","connected","url","document","domain","window","location","port","WebSocket","self","this","onmessage","msg","console","log","d","JSON","parse","data","e","URL","history","push","pathname","enqueueSnackbar","variant","onopen","_","setState","onclose","name","getElementById","value","room","send","stringify","command","createSocket","close","classes","Fragment","CssBaseline","AppBar","position","Toolbar","Typography","color","noWrap","Dialog","open","DialogContent","Grid","container","justify","CircularProgress","disableShrink","component","align","DialogActions","Button","onClick","reload","className","heroContent","Container","maxWidth","gutterBottom","paragraph","Paper","TextField","id","label","textField","margin","heroButtons","join_or_create","bind","React","Component","withSnackbar","withRouter","withStyles","theme","icon","marginRight","spacing","backgroundColor","palette","background","paper","padding","display","flexDirection","marginBottom","marginTop","marginLeft","width","styles","fontSize","teamName","paddingBottom","words","clueField","card","bottomBar","overflow","height","chatBox","appBar","zIndex","elevation","randomKey","Math","random","toString","makeSystemMessage","system","message","TeamJoinButtons","item","team_a","team_b","TeamLeaveButton","GameStartButton","Order","nums","order","forEach","num","key","p","Round","makeStyles","clues","actions","round","me","i","autoComplete","type","onChange","setGuesses","submitGuesses","setSpyGuesses","submitSpyGuesses","clue","idx","spy_clues","direction","setClues","submitClues","ExpansionPanel","expanded","number","handleExpansion","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","Chat","msgs","formatTime","date","getHours","getMinutes","padStart","chat","getMilliseconds","fontStyle","fullWidth","onKeyUp","event","preventDefault","sendchat","target","ClueView","contents","length","inner","j","TableCell","TableRow","Table","TableHead","TableBody","TabPanel","hidden","index","children","Game","Set","players","host","rounds","drawer","guesses","spy_guesses","score","tab","all_chat","team_chat","clue_view","spy_clue_view","error","new_players","add","size","push_chat","delete","team","toUpperCase","slice","array","spy_array","spy_order","onerror","onMessage","readyState","OPEN","action","closeSnackbar","field","obj","parseInt","reduce","c","v","Date","scrollTop","scrollHeight","clientHeight","lastChild","isExpanded","newValue","team_a_jsx","team_b_jsx","clue_giver","getClueGiver","spy_clue_giver","getSpyClueGiver","player","show_badge","xs","Badge","badgeContent","Divider","buttons","has","leave_team","start_game","join_a","join_b","word","set_field","submit_field","intercepts","miscommunications","toggleDrawer","Drawer","onClose","Tabs","handleTabChange","scrollButtons","Tab","send_chat","ReactDOM","render","maxSnack","exact","path"],"mappings":"8YA2CMA,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,EAAG,KACHC,WAAW,GAJI,E,0EAQNH,GAAQ,IAAD,OACdI,EAAM,QAAUC,SAASC,OAAS,IAAMC,OAAOC,SAASC,KAAO,YAInE,IAAIP,EAAI,IAAIQ,UAAUN,GAClBO,EAAOC,KA0CX,OAzCAV,EAAEW,UAAY,SAAUC,GACtBC,QAAQC,IAAI,wBACZD,QAAQC,IAAIF,GACZ,IAAIG,EAAI,KACR,IACEA,EAAIC,KAAKC,MAAML,EAAIM,MACnB,MAAOC,GAEP,YADAN,QAAQC,IAAIK,GAGd,GAAM,YAAaJ,EAKnB,OAAQA,EAAC,SACP,IAAK,YAED,IAAIb,EAAM,IAAIkB,IAAIL,EAAC,MACnBjB,EAAMuB,QAAQC,KAAK,CAAEC,SAAUrB,EAAIqB,WAErC,MACF,IAAK,QAEDV,QAAQC,IAAI,UAAYC,EAAC,KACzBN,EAAKX,MAAM0B,gBAAgBT,EAAC,IAAS,CACnCU,QAAS,UAGb,MACF,QAEIZ,QAAQC,IAAI,sBAAwBC,QArBxCF,QAAQC,IAAI,uCAAyCF,IA2BzDZ,EAAE0B,OAAS,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAE3B,WAAW,KAC3CD,EAAE6B,QAAU,SAAAF,GAAC,OAAI,EAAKC,SAAS,CAAE3B,WAAW,KAErCD,I,uCAIP,IAAI8B,EAAO3B,SAAS4B,eAAe,QAAQC,MACvCC,EAAO9B,SAAS4B,eAAe,QAAQC,MACtCF,EAKAG,EAKLvB,KAAKX,MAAMC,EAAEkC,KACXlB,KAAKmB,UAAU,CAAEC,QAAS,sBAAuBN,KAAMA,EAAMG,KAAMA,KAJnEpB,QAAQC,IAAI,gCALZD,QAAQC,IAAI,kC,0CAcdD,QAAQC,IAAI,eACZD,QAAQC,IAAIJ,KAAKX,OACI,OAAjBW,KAAKX,MAAMC,GACbU,KAAKkB,SAAS,CAAE5B,EAAGU,KAAK2B,aAAa3B,KAAKZ,W,6CAK5Ce,QAAQC,IAAI,iBACS,OAAjBJ,KAAKX,MAAMC,IACbU,KAAKX,MAAMC,EAAEsC,QACb5B,KAAKkB,SAAS,CAAE5B,EAAG,U,+BAKrB,IAAMuC,EAAU7B,KAAKZ,MAAMyC,QAE3B,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,MAAM,UAAUC,QAAM,GAA/C,cAKJ,kBAACC,EAAA,EAAD,CAAQC,MAAOvC,KAAKX,MAAME,WACxB,kBAACiD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UAAS,kBAACC,EAAA,EAAD,CAAkBD,QAAQ,SAASE,eAAa,KACjF,kBAACV,EAAA,EAAD,CAAYW,UAAU,KAAKC,MAAM,UAAjC,wCAEF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAS,SAAAjC,GAAC,OAAItB,OAAOC,SAASuD,QAAO,IAAQf,MAAM,WAA3D,aAMJ,yBAAKgB,UAAWvB,EAAQwB,aACtB,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACpB,EAAA,EAAD,CACEW,UAAU,KACV/B,QAAQ,KACRgC,MAAM,SACNX,MAAM,cACNoB,cAAY,GALd,YASA,kBAACrB,EAAA,EAAD,CACEpB,QAAQ,KACRgC,MAAM,SACNX,MAAM,gBACNqB,WAAS,GAJX,8DASF,kBAACH,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAOX,MAAM,UACX,kBAACY,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,OACNT,UAAWvB,EAAQiC,UACnBC,OAAO,WAET,kBAACJ,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,OACNT,UAAWvB,EAAQiC,UACnBC,OAAO,WAET,6BACA,kBAACd,EAAA,EAAD,CACElC,QAAQ,YACRqB,MAAM,UACNgB,UAAWvB,EAAQmC,YACnBd,QAASlD,KAAKiE,eAAeC,KAAKlE,OAJpC,+B,GA1JMmE,IAAMC,WA0KXC,yBAAaC,YAAWC,aAlMxB,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,YAAaF,EAAMG,QAAQ,IAE7BtB,YAAa,CACXuB,gBAAiBJ,EAAMK,QAAQC,WAAWC,MAC1CC,QAASR,EAAMG,QAAQ,EAAG,EAAG,IAE/BI,MAAO,CACLE,QAAS,OACTC,cAAe,SACfC,aAAcX,EAAMG,QAAQ,IAE9BX,YAAa,CACXoB,UAAWZ,EAAMG,QAAQ,GACzBQ,aAAcX,EAAMG,QAAQ,IAE9Bb,UAAW,CACTuB,WAAYb,EAAMG,QAAQ,GAC1BD,YAAaF,EAAMG,QAAQ,GAC3BW,MAAO,QA8K4Bf,CAAmBpF,K,gvBCpL1D,IAAMoG,GAAS,SAAAf,GAAK,MAAK,CACvBC,KAAM,CACJC,YAAaF,EAAMG,QAAQ,IAE7BtB,YAAa,CACXiC,MAAO,YACPV,gBAAiBJ,EAAMK,QAAQC,WAAWC,MAC1CC,QAASR,EAAMG,QAAQ,EAAG,EAAG,IAE/BI,MAAO,CACLE,QAAS,OACTC,cAAe,SACfC,aAAcX,EAAMG,QAAQ,IAE9BX,YAAa,CACXoB,UAAWZ,EAAMG,QAAQ,GACzBQ,aAAcX,EAAMG,QAAQ,IAE9Bb,UAAW,CACTuB,WAAYb,EAAMG,QAAQ,GAC1BD,YAAaF,EAAMG,QAAQ,GAC3BW,MAAO,KAETN,QAAS,CACPA,QAASR,EAAMG,QAAQ,EAAG,GAC1BQ,aAAcX,EAAMG,QAAQ,GAC5Ba,SAAU,IAEZC,SAAU,CACRC,cAAelB,EAAMG,QAAQ,IAE/BgB,MAAO,CACLX,QAAS,UAEXY,UAAW,CACTP,WAAYb,EAAMG,QAAQ,GAC1BD,YAAaF,EAAMG,QAAQ,GAC3BW,MAAO,KAETO,KAAM,CACJb,QAASR,EAAMG,QAAQ,IAEzBmB,UAAW,CACT7D,SAAU,SACV8D,SAAU,OACVC,OAAQxB,EAAMG,QAAQ,IACtBC,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAE5CkB,QAAS,CACPX,MAAO,OACPS,SAAU,OACVC,OAAQxB,EAAMG,QAAQ,IACtBC,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAE5CmB,OAAQ,CACNC,OAAQ,EACRC,UAAW,KAIXC,GAAY,SAAApF,GAAC,OAAIqF,KAAKC,SAASC,SAAS,KAExCC,GAAoB,SAAAvG,GAAS,MAAO,CAAEwG,QAAQ,EAAMtF,KAAM,GAAIuF,QAASzG,IAE3E,SAAS0G,GAAgBxH,GACvB,OACE,kBAACqD,EAAA,EAAD,CAAMC,WAAS,EAACiC,QAAS,EAAGhC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMoE,MAAI,GACR,kBAAC5D,EAAA,EAAD,CAAQlC,QAAQ,YAAYqB,MAAM,UAAUc,QAAS9D,EAAM0H,QAA3D,WAIF,kBAACrE,EAAA,EAAD,CAAMoE,MAAI,GACR,kBAAC5D,EAAA,EAAD,CAAQlC,QAAQ,YAAYqB,MAAM,UAAUc,QAAS9D,EAAM2H,QAA3D,YAQR,SAASC,GAAgB5H,GACvB,OACE,kBAACqD,EAAA,EAAD,CAAMC,WAAS,EAACiC,QAAS,EAAGhC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMoE,MAAI,GACR,kBAAC5D,EAAA,EAAD,CAAQlC,QAAQ,YAAYqB,MAAM,UAAUc,QAAS9D,EAAM8D,SAA3D,gBAQR,SAAS+D,GAAgB7H,GACvB,OACE,kBAACqD,EAAA,EAAD,CAAMC,WAAS,EAACiC,QAAS,EAAGhC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMoE,MAAI,GACR,kBAAC5D,EAAA,EAAD,CAAQlC,QAAQ,YAAYqB,MAAM,UAAUc,QAAS9D,EAAM8D,SAA3D,WAQR,SAASgE,GAAM9H,GACb,IAAI+H,EAAO,GAMX,OALA/H,EAAMgI,MAAMC,SAAQ,SAAAC,GAClBH,EAAKvG,KACH,kBAAC6B,EAAA,EAAD,CAAMoE,MAAI,EAACU,IAAKD,GAAK,kBAAC5D,EAAA,EAAD,CAAO8D,EAAG,GAAG,kBAACrF,EAAA,EAAD,CAAYpB,QAAQ,KAAKgC,MAAM,UAAUuE,SAI7E,kBAAC7E,EAAA,EAAD,CAAMC,WAAS,EAACiC,QAAS,EAAGhC,QAAQ,UACjCwE,GAKP,SAASM,GAAMrI,GACb,IAAIyC,EAAU6F,YAAWnC,IACrB6B,EAAQ,KACRO,EAAQ,GACRC,EAAU,GACd,GAAIxI,EAAMyI,MAAN,aAA8BzI,EAAM0I,IAAQ,YAAa1I,EAAMyI,MAwB5D,GAAI,UAAWzI,EAAMyI,SAAW,YAAazI,EAAMyI,OAAQ,CAChE,IAAKE,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACtB,IAAIR,EAAM,UAAYQ,EACtBJ,EAAM/G,KACJ,kBAAC6B,EAAA,EAAD,CAAMoE,MAAI,EAACU,IAAKA,GACd,kBAAC5D,EAAA,EAAD,CAAWC,GAAI2D,EACbnG,KAAM2G,EAAEvB,WACRwB,aAAa,MACbC,KAAK,SACLpE,MAAOzE,EAAMyI,MAAN,MAAqBE,GAC5B3E,UAAWvB,EAAQ+D,UACnB7B,OAAO,SACPmE,SAAU9I,EAAM+I,eAGxBP,EAAQhH,KAAK,kBAACqC,EAAA,EAAD,CAAQsE,IAAI,UAAUxG,QAAQ,YAAYqB,MAAM,UAAUc,QAAS9D,EAAMgJ,eAAzE,wBACR,GAAI,cAAehJ,EAAMyI,SAAW,qBAAsBzI,EAAMyI,QAAU,UAAWzI,EAAMyI,MAAO,CACvG,IAAKE,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACtB,IAAIR,EAAM,aAAeQ,EACzBJ,EAAM/G,KACJ,kBAAC6B,EAAA,EAAD,CAAMoE,MAAI,EAACU,IAAKA,GACd,kBAAC5D,EAAA,EAAD,CAAWC,GAAI2D,EACbnG,KAAM2G,EAAEvB,WACRwB,aAAa,MACbC,KAAK,SACLpE,MAAOzE,EAAMyI,MAAN,UAAyBE,GAChC3E,UAAWvB,EAAQ+D,UACnB7B,OAAO,SACPmE,SAAU9I,EAAMiJ,kBAGxBT,EAAQhH,KAAK,kBAACqC,EAAA,EAAD,CAAQsE,IAAI,WAAWxG,QAAQ,YAAYqB,MAAM,UAAUc,QAAS9D,EAAMkJ,kBAA1E,2BACJ,cAAelJ,EAAMyI,OAAS,UAAWzI,EAAMyI,OACxDT,EACE,kBAAC9D,EAAA,EAAD,KACE,kBAACnB,EAAA,EAAD,oBACA,kBAAC+E,GAAD,CAAOE,MAAOhI,EAAMyI,MAAN,QAEd,kBAAC1F,EAAA,EAAD,oBACA,kBAAC+E,GAAD,CAAOE,MAAOhI,EAAMyI,MAAN,UAEd,kBAAC1F,EAAA,EAAD,qBACA,kBAAC+E,GAAD,CAAOE,MAAOhI,EAAMyI,MAAN,YAEd,kBAAC1F,EAAA,EAAD,wBACA,kBAAC+E,GAAD,CAAOE,MAAOhI,EAAMyI,MAAN,oBAGlBF,EAAM/G,KAAK,kBAAC6B,EAAA,EAAD,CAAMoE,MAAI,EAACU,IAAKlB,MAAa,kBAAClE,EAAA,EAAD,sBACxC/C,EAAMyI,MAAMF,MAAMN,SAAQ,SAAUkB,EAAMC,GACxCb,EAAM/G,KAAK,kBAAC6B,EAAA,EAAD,CAAMoE,MAAI,EAACU,IAAKlB,MAAa,kBAAClE,EAAA,EAAD,KAAaqG,EAAM,EAAnB,KAAwBD,QAElEZ,EAAM/G,KAAK,kBAAC6B,EAAA,EAAD,CAAMoE,MAAI,EAACU,IAAKlB,MAAa,kBAAClE,EAAA,EAAD,qBACxC/C,EAAMyI,MAAMY,UAAUpB,SAAQ,SAAUkB,EAAMC,GAC5Cb,EAAM/G,KAAK,kBAAC6B,EAAA,EAAD,CAAMoE,MAAI,EAACU,IAAKlB,MAAa,kBAAClE,EAAA,EAAD,KAAaqG,EAAM,EAAnB,KAAwBD,QAElEZ,EAAQ,kBAAClF,EAAA,EAAD,CAAMC,WAAS,EAACgG,UAAU,SAAS/F,QAAQ,UAAUgF,IAE7DA,EAAQ,kBAAClF,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UAAS,kBAACC,EAAA,EAAD,CAAkBD,QAAQ,SAASE,eAAa,SAlFhB,CACzE,GAAI,UAAWzD,EAAMyI,MACnBF,EAAQ,kBAAClF,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UAAS,kBAACC,EAAA,EAAD,CAAkBD,QAAQ,SAASE,eAAa,UAEzF,IAAK,IAAIkF,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B,IAAIR,EAAM,QAAUQ,EACpBJ,EAAM/G,KACJ,kBAAC6B,EAAA,EAAD,CAAMoE,MAAI,EAACU,IAAKA,GACd,kBAAC5D,EAAA,EAAD,CAAWC,GAAI2D,EACbnG,KAAM2G,EAAEvB,WACRwB,aAAa,MACbnE,MAAO,UAAYkE,EAAI,GACvB3E,UAAWvB,EAAQ+D,UACnB7B,OAAO,SACPmE,SAAU9I,EAAMuJ,aAItB,UAAWvJ,EAAMyI,QACnBT,EAAQ,kBAACF,GAAD,CAAOE,MAAOhI,EAAMyI,MAAN,SAElB,UAAWzI,EAAMyI,OACrBD,EAAQhH,KAAK,kBAACqC,EAAA,EAAD,CAAQsE,IAAI,UAAUxG,QAAQ,YAAYqB,MAAM,UAAUc,QAAS9D,EAAMwJ,aAAzE,iBA8DjB,OACE,kBAACC,EAAA,EAAD,CAAgBC,SAAU1J,EAAM0J,WAAa1J,EAAMyI,MAAMkB,OAAQb,SAAU9I,EAAM4J,gBAAgB5J,EAAMyI,MAAMkB,SAC3G,kBAACE,EAAA,EAAD,CAAuBC,WAAY,kBAAC,IAAD,OACjC,kBAAC/G,EAAA,EAAD,CAAYC,MAAM,cAAcrB,QAAQ,MAAxC,SAAoD3B,EAAMyI,MAAMkB,OAAS,IAE3E,kBAACI,EAAA,EAAD,KACE,kBAAC1G,EAAA,EAAD,CAAMW,UAAWvB,EAAQgE,KAAMlB,QAAS,EAAGjC,WAAS,GACjD0E,EACAO,GAEJC,IAMP,SAASwB,GAAKhK,GACZ,IAAIiK,EAAO,GACPC,EAAa,SAAAC,GAAI,OAAIA,EAAKC,WAAa,IAAMD,EAAKE,aAAajD,WAAWkD,SAAS,EAAG,MAC1FtK,EAAMuK,KAAKtC,SAAQ,SAAUnH,EAAKsI,GAC5B,WAAYtI,EACdmJ,EAAKzI,KACH,kBAAC0C,EAAA,EAAD,CAAWiE,IAAKrH,EAAIqJ,KAAOrJ,EAAIqJ,KAAKK,kBAAoB1J,EAAIkB,KAAOlB,EAAIyJ,MACrE,kBAACxH,EAAA,EAAD,CAAY8C,QAAQ,UAApB,IAA+BqE,EAAWpJ,EAAIqJ,MAA9C,KACA,kBAACpH,EAAA,EAAD,CAAY8C,QAAQ,SAAS7C,MAAM,gBAAgByH,UAAU,UAA7D,KAAyE3J,EAAIyG,WAGjF0C,EAAKzI,KACH,kBAAC0C,EAAA,EAAD,CAAWiE,IAAKrH,EAAIqJ,KAAOrJ,EAAIqJ,KAAKK,kBAAoB1J,EAAIkB,KAAOlB,EAAIyJ,MACrE,kBAACxH,EAAA,EAAD,CAAY8C,QAAQ,UAApB,IAA+BqE,EAAWpJ,EAAIqJ,MAA9C,KACA,kBAACpH,EAAA,EAAD,CAAY8C,QAAQ,UAApB,IAA8B,2BAAI/E,EAAIkB,OACtC,kBAACe,EAAA,EAAD,CAAY8C,QAAQ,UAApB,KAAgC/E,EAAIyG,cAY5C,OACE,kBAAC,IAAM7E,SAAP,KACE,kBAACwB,EAAA,EAAD,CAAWM,GAAIxE,EAAMwE,GAAIR,UAAWhE,EAAMgE,WACvCiG,GAEH,kBAAC1F,EAAA,EAAD,CAAWvC,KAAK,OAAO0I,WAAS,EAACC,QAbhB,SAAAC,GACnBA,EAAMC,iBACY,UAAdD,EAAMzC,MACRnI,EAAM8K,SAASF,EAAMG,OAAO7I,OAC5B0I,EAAMG,OAAO7I,MAAQ,OASqC0G,aAAa,MAAMnE,MAAM,8BAA8BE,OAAO,YAK9H,SAASqG,GAAShL,GAEhB,IADA,IAAIiL,EAAW,GACNtC,EAAI,EAAGA,EAAI3I,EAAMuI,MAAM2C,SAAUvC,EAAG,CAE3C,IADA,IAAIwC,EAAQ,GACHC,EAAI,EAAGA,EAAIpL,EAAMuI,MAAMI,GAAGuC,SAAUE,EAC3CD,EAAM3J,KACJ,kBAAC6J,EAAA,EAAD,CAAWlD,IAAKiD,GAAIpL,EAAMuI,MAAMI,GAAGyC,GAAKpL,EAAMuI,MAAMI,GAAGyC,GAAK,KAGhEH,EAASzJ,KACP,kBAAC8J,EAAA,EAAD,CAAUnD,IAAKQ,GACZwC,IAIP,OACE,kBAACI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACF,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,iBAGJ,kBAACI,EAAA,EAAD,KACGR,IAMT,SAASS,GAAS1L,GAChB,OACE,kBAACkE,EAAA,EAAD,CAAWyH,OAAQ3L,EAAMkC,QAAUlC,EAAM4L,OACtC5L,EAAM6L,U,IAKPC,G,YACJ,WAAY9L,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXyH,OAAQ,IAAIqE,IACZpE,OAAQ,IAAIoE,IACZC,QAAS,IAAID,IACbrD,GAAI,GACJuD,KAAM,GACNhM,MAAO,QACPC,EAAG,KACHC,WAAW,EACXoH,QAAS,yBACThB,MAAO,GACP2F,OAAQ,GACRC,QAAQ,EACR5D,MAAO,GACP6D,QAAS,GACTC,YAAa,GACbC,MAAO,KACP5C,UAAU,EACV6C,IAAK,EACLC,SAAU,GACVC,UAAW,GACXC,UAAW,GACXC,cAAe,IAxBA,E,uEA4BT7L,GAGR,GAFAC,QAAQC,IAAI,wBACZD,QAAQC,IAAIF,EAAIM,MACXN,EAAIM,KAAT,CACA,IAAIH,EAAI,KACR,IACEA,EAAIC,KAAKC,MAAML,EAAIM,MACnB,MAAOC,GAEP,YADAN,QAAQC,IAAIK,GAGd,GAAM,YAAaJ,EAKnB,OAAQA,EAAC,SACP,IAAK,QACHF,QAAQC,IAAI,UAAYC,EAAC,KACzBL,KAAKgM,MAAM3L,EAAC,KACZ,MACF,IAAK,mBACH,IAAI4L,EAAc,IAAId,IAAInL,KAAKX,MAAM+L,SACrCa,EAAYC,IAAI7L,EAAC,QACjBL,KAAKkB,SAAS,CAAEkK,QAASa,IACO,IAA5BjM,KAAKX,MAAM+L,QAAQe,MACrBnM,KAAKkB,SAAS,CAAE4G,GAAIzH,EAAC,SAEvBL,KAAKoM,UAAU,WAAY3F,GAAkBpG,EAAC,OAAa,gBAC3D,MACF,IAAK,sBACH,IAAI4L,EAAc,IAAId,IAAInL,KAAKX,MAAM+L,SACrCa,EAAYI,OAAOhM,EAAC,QACpBL,KAAKkB,SAAS,CAAEkK,QAASa,IACzBjM,KAAKoM,UAAU,WAAY3F,GAAkBpG,EAAC,OAAa,mBAC3D,MACF,IAAK,cAIH,GAHIL,KAAKX,MAAMyI,KAAOzH,EAAC,MACrBL,KAAKkB,SAAS,CAAEyF,QAAS,iCAET,MAAdtG,EAAC,KAAkB,CACrB,IAAIiM,EAAO,IAAInB,IAAInL,KAAKX,MAAMyH,QAC9BwF,EAAKJ,IAAI7L,EAAC,MACVL,KAAKkB,SAAS,CAAE4F,OAAQwF,QACnB,IAAkB,MAAdjM,EAAC,KAMV,YADAF,QAAQC,IAAI,qCAAuCC,EAAC,MAJpD,IAAIiM,EAAO,IAAInB,IAAInL,KAAKX,MAAM0H,QAC9BuF,EAAKJ,IAAI7L,EAAC,MACVL,KAAKkB,SAAS,CAAE6F,OAAQuF,IAK1BtM,KAAKoM,UAAU,WAAY3F,GAAkBpG,EAAC,KAAW,gBAAkBA,EAAC,KAASkM,gBACrF,MACF,IAAK,YACH,GAAkB,MAAdlM,EAAC,KAAkB,CACrB,IAAIiM,EAAO,IAAInB,IAAInL,KAAKX,MAAMyH,QAC9BwF,EAAKD,OAAOhM,EAAC,MACbL,KAAKkB,SAAS,CAAE4F,OAAQwF,QACnB,IAAkB,MAAdjM,EAAC,KAMV,YADAF,QAAQC,IAAI,mCAAqCC,EAAC,MAJlD,IAAIiM,EAAO,IAAInB,IAAInL,KAAKX,MAAM0H,QAC9BuF,EAAKD,OAAOhM,EAAC,MACbL,KAAKkB,SAAS,CAAE6F,OAAQuF,IAK1BtM,KAAKoM,UAAU,WAAY3F,GAAkBpG,EAAC,KAAW,cAAgBA,EAAC,KAASkM,gBACnF,MACF,IAAK,WACHvM,KAAKkB,SAAS,CAAEmK,KAAMhL,EAAC,SACvBL,KAAKoM,UAAU,WAAY3F,GAAkBpG,EAAC,OAAa,qBAC3D,MACF,IAAK,QACHL,KAAKkB,SAAS,CAAE7B,MAAO,UACvBW,KAAKkB,SAAS,CAAEyE,MAAOtF,EAAC,MAAUmM,MAAM,KACxC,MACF,IAAK,QACH,IAAIlB,EAAStL,KAAKX,MAAMiM,OAAOkB,MAAM,GAkBrC,GAjBAlB,EAAOjL,EAAC,QAAR,KAA2BiL,EAAOjL,EAAC,QAAnC,GAAmDA,GAC/C,UAAWiL,EAAOjL,EAAC,SAAe,YAAaiL,EAAOjL,EAAC,QACzDL,KAAKkB,SAAS,CAAEoK,OAAQA,EACtB3E,QAAS,6BACT8E,YAAa,GACb3C,SAAUzI,EAAE0I,SACL,UAAWuC,EAAOjL,EAAC,QAC5BL,KAAKkB,SAAS,CAAEoK,OAAQA,EACtB3E,QAAS,mCACT6E,QAAS,GACT1C,SAAUzI,EAAE0I,SAEd/I,KAAKkB,SAAS,CAAEoK,OAAQA,EACtB3E,QAAS,uBACTgB,MAAO,GACPmB,SAAUzI,EAAE0I,SAEZ,UAAW1I,GAAK,cAAeA,EAAG,CAKpC,IAJA,IAAIyL,EAAY9L,KAAKX,MAAMyM,UACvBC,EAAgB/L,KAAKX,MAAM0M,cAC3BU,EAAQ,GACRC,EAAY,GACP3E,EAAI,EAAGA,EAAI1H,EAAE+G,MAAMkD,SAAUvC,EACpC0E,EAAMpM,EAAE+G,MAAMW,IAAM1H,EAAEsH,MAAMI,GAC5B2E,EAAUrM,EAAEsM,UAAU5E,IAAM1H,EAAEoI,UAAUV,GAE1C+D,EAAUzL,EAAE0I,QAAU0D,EACtBV,EAAc1L,EAAE0I,QAAU2D,EAC1B1M,KAAKkB,SAAS,CAAE4K,UAAWA,EAAWC,cAAeA,IAEvD,MACF,IAAK,QACH,IAAIT,EAAStL,KAAKX,MAAMiM,OAAOkB,MAAM,GAIrC,GAHKlB,EAAOjL,EAAC,UACXiL,EAAOjL,EAAC,QAAc,IAEpB,UAAWiL,EAAOjL,EAAC,QAAa,MACpCiL,EAAOjL,EAAC,QAAR,MAA+BA,EAAC,MAChCL,KAAKkB,SAAS,CAAEoK,OAAQA,EAAQ3E,QAAS,2CACzC,MACF,IAAK,QACC,WAAYtG,EACdL,KAAKkB,SAAS,CAAEwK,MAAOrL,EAAGsG,QAAStG,EAAC,OAAa,0CAA4CA,EAAEsF,MAAMmB,OAAS,WAAazG,EAAEsF,MAAMoB,SAC1H,QAAS1G,EAClBL,KAAKkB,SAAS,CAAEwK,MAAOrL,EAAGsG,QAAS,yCAA2CtG,EAAEsF,MAAMmB,OAAS,WAAazG,EAAEsF,MAAMoB,SAEpH/G,KAAKkB,SAAS,CAAEwK,MAAOrL,IAEzB,MACF,IAAK,YACHL,KAAKoM,UAAU,YAAa/L,GAC5B,MACF,IAAK,WACHL,KAAKoM,UAAU,WAAY/L,GAC3B,MACF,QACEF,QAAQC,IAAI,cAAgBC,QA3H9BF,QAAQC,IAAI,uCAAyCF,M,mCAgI5Cd,GAAQ,IAAD,OACdI,EAAM,QAAUC,SAASC,OAAS,IAAMC,OAAOC,SAASC,KAAOF,OAAOC,SAASiB,SAAW,MAI9F,IAAIvB,EAAI,IAAIQ,UAAUN,GAWtB,OATAF,EAAEsN,QAAU,SAAUnM,GACpBN,QAAQC,IAAI,UACZD,QAAQC,IAAIK,IAGdnB,EAAEW,UAAY,SAAAC,GAAG,OAAI,EAAK2M,UAAU3M,IAEpCZ,EAAE0B,OAAS,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAE3B,WAAW,KAC3CD,EAAE6B,QAAU,SAAAF,GAAC,OAAI,EAAKC,SAAS,CAAE3B,WAAW,KACrCD,I,0CAIc,OAAjBU,KAAKX,MAAMC,GACbU,KAAKkB,SAAS,CAAE5B,EAAGU,KAAK2B,aAAa3B,KAAKZ,W,6CAKvB,OAAjBY,KAAKX,MAAMC,IACbU,KAAKX,MAAMC,EAAEsC,QACb5B,KAAKkB,SAAS,CAAE5B,EAAG,U,2BAIlBY,GACEF,KAAKX,MAAMC,GAAKU,KAAKX,MAAMC,EAAEwN,aAAe9M,KAAKX,MAAMC,EAAEyN,KAI9D/M,KAAKX,MAAMC,EAAEkC,KAAKlB,KAAKmB,UAAUvB,IAH/BF,KAAKgM,MAAM,8C,4BAMT9L,GAAM,IAAD,OAMTF,KAAKZ,MAAM0B,gBAAgBZ,EAAK,CAC9Ba,QAAS,QACTiM,OAPW,SAAAzF,GAAG,OACd,kBAACtE,EAAA,EAAD,CAAQC,QAAS,WAAQ,EAAK9D,MAAM6N,cAAc1F,KAAlD,WACU,kBAAC,IAAD,Y,+BAUZvH,KAAKwB,KAAK,CAAE,QAAW,a,+BAIvBxB,KAAKwB,KAAK,CAAE,QAAW,a,mCAIvBxB,KAAKwB,KAAK,CAAE,QAAW,iB,mCAIvBxB,KAAKwB,KAAK,CAAE,QAAW,iB,gCAGf0L,EAAOzM,GACf,IAAI0M,EAAMnN,KAAKX,MAAM6N,GACjB7N,EAAQ,GACU,WAAlBoB,EAAE0J,OAAOlC,KACXkF,EAAIC,SAAS3M,EAAE0J,OAAO/I,OAASgM,SAAS3M,EAAE0J,OAAO7I,OAEjD6L,EAAIC,SAAS3M,EAAE0J,OAAO/I,OAASX,EAAE0J,OAAO7I,MAE1CjC,EAAM6N,GAASC,EACfnN,KAAKkB,SAAS7B,K,mCAGH6N,EAAOzM,GAAI,IAAD,EACjB0M,EAAMnN,KAAKX,MAAM6N,GACrB,GAAmB,IAAfC,EAAI7C,OAIR,GAAK6C,EAAIE,QAAO,SAACC,EAAGC,GAAJ,OAAUD,GAAKC,KAAG,GAAlC,CAIA,IAAIlO,EAAQ,GACZA,EAAM6N,GAAS,GACflN,KAAKkB,SAAS7B,GACdW,KAAKwB,MAAL,GACE,QAAW0L,GADb,cAEGA,EAAQC,GAFX,cAGE,SAAUnN,KAAKX,MAAMiM,OAAOhB,OAAS,GAHvC,SANEtK,KAAKgM,MAAM,QAAUkB,EAAQ,gBAJ7BlN,KAAKgM,MAAM,QAAUmB,EAAI7C,OAAS,W,gCAiB5B5I,EAASiF,GACjB3G,KAAKwB,KAAK,CAACE,QAASA,EAASiF,QAASA,M,gCAG9BsB,EAAMqF,GACd,IAAI3D,EAAO3J,KAAKX,MAAM4I,GACtB0B,EAAK/I,KAAL,GAAW2I,KAAM,IAAIiE,MAAWF,IAChCtN,KAAKkB,SAAL,eAAiB+G,EAAO0B,IACxB,IAAIlJ,EAAIhB,SAAS4B,eAAe4G,GAC5BxH,GAAKA,EAAEgN,WAAahN,EAAEiN,aAAejN,EAAEkN,aAAelN,EAAEmN,UAAUD,eACpElN,EAAEgN,UAAYhN,EAAEiN,gB,qCAKlB,MAAyB,UAArB1N,KAAKX,MAAMA,MAA0B,KACR,IAA7BW,KAAKX,MAAMiM,OAAOhB,OAAqB,KACpCtK,KAAKX,MAAMiM,OAAOtL,KAAKX,MAAMiM,OAAOhB,OAAS,GAA7C,a,wCAIP,MAAyB,UAArBtK,KAAKX,MAAMA,MAA0B,KACR,IAA7BW,KAAKX,MAAMiM,OAAOhB,OAAqB,KACpCtK,KAAKX,MAAMiM,OAAOtL,KAAKX,MAAMiM,OAAOhB,OAAS,GAA7C,iB,qCAIPtK,KAAKkB,SAAS,CAAEqK,QAASvL,KAAKX,MAAMkM,W,sCAGtB1D,GACd,IAAI9H,EAAOC,KACX,OAAO,SAACgK,EAAO6D,GACb9N,EAAKmB,SAAS,CAAE4H,WAAU+E,GAAahG,O,sCAI3BmC,EAAO8D,GACrB9N,KAAKkB,SAAS,CAAEyK,IAAKmC,M,+BAIrB,IAAMjM,EAAU7B,KAAKZ,MAAMyC,QACvBkM,EAAa,GACbC,EAAa,GACb3C,EAAOrL,KAAKX,MAAMgM,KAClBvD,EAAK9H,KAAKX,MAAMyI,GAChBmG,EAAajO,KAAKkO,eAClBC,EAAiBnO,KAAKoO,kBAC1B,CAAC,CAACpO,KAAKX,MAAMyH,OAAQiH,GAAa,CAAC/N,KAAKX,MAAM0H,OAAQiH,IAAa3G,SAAQ,SAAUiF,GACnFA,EAAK,GAAGjF,SAAQ,SAAUgH,GACxB,IAAIC,EAAaD,IAAWJ,GAAcI,IAAWF,EAAiB,KAAO,EACzE/L,EAAQ0F,IAAOuG,EAAS,cAAgB,gBAC5C/B,EAAK,GAAG1L,KACN,kBAAC6B,EAAA,EAAD,CAAM8L,IAAE,EAAC1H,MAAI,EAACU,IAAK8G,GACjB,kBAACG,EAAA,EAAD,CAAOC,aAAcH,EAAYlM,MAAM,YAAYgB,UAAWvB,EAAQmD,SACpE,kBAAC7C,EAAA,EAAD,CAAYW,UAAU,KAAKC,MAAM,SAASX,MAAOA,EAAOmF,IAAK8G,GAASA,IAExE,kBAACK,EAAA,EAAD,cAKR,IAAIC,EAAU,GACVhJ,EAAQ,GACa,UAArB3F,KAAKX,MAAMA,MACRW,KAAKX,MAAMyH,OAAO8H,IAAI5O,KAAKX,MAAMyI,KAAO9H,KAAKX,MAAM0H,OAAO6H,IAAI5O,KAAKX,MAAMyI,KAC5E6G,EAAQ/N,KAAK,kBAACoG,GAAD,CAAiBO,IAAI,QAAQrE,QAASlD,KAAK6O,WAAW3K,KAAKlE,SACpEA,KAAKX,MAAMyI,KAAOuD,GACpBsD,EAAQ/N,KAAK,kBAACqG,GAAD,CAAiBM,IAAI,QAAQrE,QAASlD,KAAK8O,WAAW5K,KAAKlE,UAG1E2O,EAAU,kBAAC/H,GAAD,CAAiBW,IAAI,OAAOT,OAAQ9G,KAAK+O,OAAO7K,KAAKlE,MAAO+G,OAAQ/G,KAAKgP,OAAO9K,KAAKlE,QAExFA,KAAKX,MAAMsG,MAAM2E,OAAS,GACnCtK,KAAKX,MAAMsG,MAAM0B,SAAQ,SAAU4H,EAAMzG,GACvC7C,EAAM/E,KACJ,kBAAC6B,EAAA,EAAD,CAAMoE,MAAI,EAACU,IAAK0H,GACd,kBAACT,EAAA,EAAD,CAAOC,aAAcjG,EAAM,EAAGpG,MAAM,aAClC,kBAACsB,EAAA,EAAD,CAAON,UAAWvB,EAAQgE,MACxB,kBAAC1D,EAAA,EAAD,CAAYW,UAAU,KAAK/B,QAAQ,KAAKgC,MAAM,SAASX,MAAM,cAAcoB,cAAY,GACpFyL,UAQf,IAAI3D,EAAS,GACTvL,EAAOC,KACXA,KAAKX,MAAMiM,OAAOjE,SAAQ,SAAUQ,GAClCyD,EAAO1K,KAAK,kBAAC6B,EAAA,EAAD,CAAMoE,MAAI,EAACU,IAAKM,EAAK,QAAY,kBAACJ,GAAD,CAC3CI,MAAOA,EAAOC,GAAIA,EAAIgB,SAAU/I,EAAKV,MAAMyJ,SAAUE,gBAAiBjJ,EAAKiJ,gBAAgB9E,KAAKnE,GAChG4I,SAAU5I,EAAKmP,UAAUhL,KAAKnE,EAAM,SACpC6I,YAAa7I,EAAKoP,aAAajL,KAAKnE,EAAM,SAC1CoI,WAAYpI,EAAKmP,UAAUhL,KAAKnE,EAAM,WACtCqI,cAAerI,EAAKoP,aAAajL,KAAKnE,EAAM,WAC5CsI,cAAetI,EAAKmP,UAAUhL,KAAKnE,EAAM,eACzCuI,iBAAkBvI,EAAKoP,aAAajL,KAAKnE,EAAM,sBAGnD,IAAI2L,EAAQ,GAwBZ,OAvBI1L,KAAKX,MAAMqM,QACbA,EACE,kBAACpI,EAAA,EAAD,KACE,kBAACb,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASgC,QAAS,GACxC,kBAAClC,EAAA,EAAD,CAAMoE,MAAI,GACR,kBAACnD,EAAA,EAAD,CAAON,UAAWvB,EAAQmD,SACxB,kBAAC7C,EAAA,EAAD,CAAYpB,QAAQ,MAApB,UACA,kBAACoB,EAAA,EAAD,oBAAyBnC,KAAKX,MAAMqM,MAAM5E,OAAOsI,YACjD,kBAACjN,EAAA,EAAD,2BAAgCnC,KAAKX,MAAMqM,MAAM5E,OAAOuI,qBAG5D,kBAAC5M,EAAA,EAAD,CAAMoE,MAAI,GACR,kBAACnD,EAAA,EAAD,CAAON,UAAWvB,EAAQmD,SACxB,kBAAC7C,EAAA,EAAD,CAAYpB,QAAQ,MAApB,UACA,kBAACoB,EAAA,EAAD,oBAAyBnC,KAAKX,MAAMqM,MAAM3E,OAAOqI,YACjD,kBAACjN,EAAA,EAAD,2BAAgCnC,KAAKX,MAAMqM,MAAM3E,OAAOsI,wBASlE,kBAAC,IAAMvN,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAUkB,UAAWvB,EAAQ4C,KAAMvB,QAASlD,KAAKsP,aAAapL,KAAKlE,QACnE,kBAACmC,EAAA,EAAD,CAAYpB,QAAQ,KAAKqB,MAAM,UAAUC,QAAM,GAA/C,cAKJ,kBAACkN,EAAA,EAAD,CAAQhN,KAAMvC,KAAKX,MAAMkM,OAAQiE,QAASxP,KAAKsP,aAAapL,KAAKlE,OAC/D,kBAACsD,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,KACE,kBAACvB,EAAA,EAAD,CAAYW,UAAU,KAAK/B,QAAQ,KAAKgC,MAAM,SAASX,MAAM,cAAcgB,UAAWvB,EAAQ4D,UAA9F,UACCsI,GAEH,kBAACrK,EAAA,EAAD,KACE,kBAACvB,EAAA,EAAD,CAAYW,UAAU,KAAK/B,QAAQ,KAAKgC,MAAM,SAASX,MAAM,cAAcgB,UAAWvB,EAAQ4D,UAA9F,UACCuI,KAIP,kBAAC1L,EAAA,EAAD,CAAQC,MAAOvC,KAAKX,MAAME,WACxB,kBAACiD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UAAS,kBAACC,EAAA,EAAD,CAAkBD,QAAQ,SAASE,eAAa,KACjF,kBAACV,EAAA,EAAD,CAAYW,UAAU,KAAKC,MAAM,UAAjC,wCAEF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAS,SAAAjC,GAAC,OAAItB,OAAOC,SAASuD,QAAO,IAAQf,MAAM,WAA3D,aAKJ,kBAACkB,EAAA,EAAD,CAAWF,UAAWvB,EAAQwB,aAC5B,kBAACC,EAAA,EAAD,KACGoI,GAEH,kBAACpI,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACpB,EAAA,EAAD,CAAYW,UAAU,KAAK/B,QAAQ,KAAKgC,MAAM,SAASX,MAAM,cAAcoB,cAAY,GACpFxD,KAAKX,MAAMsH,UAGhB,kBAACrD,EAAA,EAAD,CAAWF,UAAWvB,EAAQmC,aAC3B2K,GAEH,kBAACrL,EAAA,EAAD,CAAWF,UAAWvB,EAAQ4C,MAC5B,kBAAChC,EAAA,EAAD,CAAMC,WAAS,EAACiC,QAAS,EAAGhC,QAAQ,UACjCgD,KAIP,kBAACrC,EAAA,EAAD,KACGgI,GAEH,kBAAChI,EAAA,EAAD,CAAWF,UAAWvB,EAAQiE,WAC5B,kBAAC9D,EAAA,EAAD,CAAQoE,UAAW,EAAGhD,UAAWvB,EAAQqE,OAAQjE,SAAS,UACxD,kBAACwN,EAAA,EAAD,CAAMnO,MAAOtB,KAAKX,MAAMsM,IAAKzD,SAAUlI,KAAK0P,gBAAgBxL,KAAKlE,MAAO2P,cAAc,KAAK5O,QAAQ,cACjG,kBAAC6O,EAAA,EAAD,CAAK/L,MAAM,WAAWmH,MAAO,IAC7B,kBAAC4E,EAAA,EAAD,CAAK/L,MAAM,YAAYmH,MAAO,IAC9B,kBAAC4E,EAAA,EAAD,CAAK/L,MAAM,YAAYmH,MAAO,IAC9B,kBAAC4E,EAAA,EAAD,CAAK/L,MAAM,gBAAgBmH,MAAO,MAGtC,kBAACF,GAAD,CAAUxJ,MAAOtB,KAAKX,MAAMsM,IAAKX,MAAO,GACtC,kBAAC5B,GAAD,CAAMxF,GAAG,WAAWR,UAAWvB,EAAQoE,QAASiE,SAAUlK,KAAK6P,UAAU3L,KAAKlE,KAAM,YAAa2J,KAAM3J,KAAKX,MAAMuM,YAEpH,kBAACd,GAAD,CAAUxJ,MAAOtB,KAAKX,MAAMsM,IAAKX,MAAO,GACtC,kBAAC5B,GAAD,CAAMxF,GAAG,YAAYR,UAAWvB,EAAQoE,QAASiE,SAAUlK,KAAK6P,UAAU3L,KAAKlE,KAAM,aAAc2J,KAAM3J,KAAKX,MAAMwM,aAEtH,kBAACf,GAAD,CAAUxJ,MAAOtB,KAAKX,MAAMsM,IAAKX,MAAO,GACtC,kBAACZ,GAAD,CAAUzC,MAAO3H,KAAKX,MAAMyM,aAE9B,kBAAChB,GAAD,CAAUxJ,MAAOtB,KAAKX,MAAMsM,IAAKX,MAAO,GACtC,kBAACZ,GAAD,CAAUzC,MAAO3H,KAAKX,MAAM0M,uB,GArdrB5H,IAAMC,WA6dVC,0BAAaE,YAAWgB,GAAXhB,CAAmB2G,KCvxB/C4E,IAASC,OACP,mBAdF,WACE,OACE,kBAAC,mBAAD,CAAkBC,SAAU,GACxB,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIpN,UAAW3D,IACjC,kBAAC,IAAD,CAAO+Q,KAAK,QAAQpN,UAAWoI,UAQzC,MACAzL,SAAS4B,eAAe,W","file":"static/js/main.b82ec748.chunk.js","sourcesContent":["import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport { withRouter } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField'\nimport { withSnackbar } from 'notistack';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: theme.spacing(1)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n})\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      s: null,\n      connected: false,\n    };\n  }\n\n  createSocket(props) {\n    let url = 'ws://' + document.domain + ':' + window.location.port + '/lobby_ws';\n    if (process.env.NODE_ENV === 'development') {\n      url = 'ws://' + document.domain + ':8080/lobby_ws';\n    }\n    let s = new WebSocket(url);\n    let self = this;\n    s.onmessage = function (msg) {\n      console.log('Got server response:')\n      console.log(msg)\n      let d = null\n      try {\n        d = JSON.parse(msg.data)\n      } catch (e) {\n        console.log(e)\n        return\n      }\n      if (!('command' in d)) {\n        console.log('No command in response from server. ' + msg)\n        return\n      }\n\n      switch (d['command']) {\n        case 'join_game':\n          {\n            let url = new URL(d['game'])\n            props.history.push({ pathname: url.pathname })\n          }\n          break\n        case 'error':\n          {\n            console.log('ERROR: ' + d['msg'])\n            self.props.enqueueSnackbar(d['msg'], {\n              variant: 'error',\n            });\n          }\n          break\n        default:\n          {\n            console.log('Unhandled command: ' + d)\n          }\n          break\n      }\n    }\n\n    s.onopen = _ => this.setState({ connected: true });\n    s.onclose = _ => this.setState({ connected: false });\n\n    return s\n  }\n\n  join_or_create() {\n    let name = document.getElementById('name').value\n    let room = document.getElementById('room').value\n    if (!name) {\n      // TODO: replace with toast\n      console.log('ERROR: Name cannot be empty.')\n      return\n    }\n    if (!room) {\n      // TODO: replace with toast\n      console.log('ERROR: Room cannot be empty.')\n      return\n    }\n    this.state.s.send(\n      JSON.stringify({ command: 'join_or_create_game', name: name, room: room })\n    )\n  }\n\n  componentDidMount() {\n    console.log(\"LOBBY MOUNT\");\n    console.log(this.state);\n    if (this.state.s === null) {\n      this.setState({ s: this.createSocket(this.props) })\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"LOBBY UNMOUNT\");\n    if (this.state.s === null) {\n      this.state.s.close()\n      this.setState({ s: null })\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Decrypto\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Dialog open={!this.state.connected}>\n          <DialogContent>\n            <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>\n            <Typography component=\"h2\" align=\"center\">Waiting for WebSocket connection...</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={_ => window.location.reload(false)} color=\"primary\">\n              Refresh\n          </Button>\n          </DialogActions>\n        </Dialog>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth='sm'>\n            <Typography\n              component='h1'\n              variant='h2'\n              align='center'\n              color='textPrimary'\n              gutterBottom\n            >\n              Decrypto\n            </Typography>\n            <Typography\n              variant='h5'\n              align='center'\n              color='textSecondary'\n              paragraph\n            >\n              Enter a game name and user name to join or create a game!\n            </Typography>\n          </Container>\n          <Container>\n            <Paper align='center'>\n              <TextField\n                id='name'\n                label='Name'\n                className={classes.textField}\n                margin='normal'\n              />\n              <TextField\n                id='room'\n                label='Room'\n                className={classes.textField}\n                margin='normal'\n              />\n              <br />\n              <Button\n                variant='contained'\n                color='primary'\n                className={classes.heroButtons}\n                onClick={this.join_or_create.bind(this)}\n              >\n                Join or Create Game\n              </Button>\n            </Paper>\n          </Container>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withSnackbar(withRouter(withStyles(styles)(Lobby)));\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Badge from '@material-ui/core/Badge';\nimport { withSnackbar } from 'notistack';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport TextField from '@material-ui/core/TextField'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    width: 'available',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: theme.spacing(1),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  padding: {\n    padding: theme.spacing(0, 2),\n    marginBottom: theme.spacing(1),\n    fontSize: 12,\n  },\n  teamName: {\n    paddingBottom: theme.spacing(1),\n  },\n  words: {\n    padding: '0.25em',\n  },\n  clueField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  card: {\n    padding: theme.spacing(1),\n  },\n  bottomBar: {\n    position: 'static',\n    overflow: 'none',\n    height: theme.spacing(15),\n    backgroundColor: theme.palette.background.paper,\n  },\n  chatBox: {\n    width: '100%',\n    overflow: 'auto',\n    height: theme.spacing(15),\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    zIndex: 2,\n    elevation: 0,\n  },\n});\n\nlet randomKey = _ => Math.random().toString(36);\n\nlet makeSystemMessage = msg => { return { system: true, name: '', message: msg }; }\n\nfunction TeamJoinButtons(props) {\n  return (\n    <Grid container spacing={2} justify=\"center\">\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.team_a}>\n          Team A\n          </Button>\n      </Grid>\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.team_b}>\n          Team B\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction TeamLeaveButton(props) {\n  return (\n    <Grid container spacing={2} justify=\"center\">\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>\n          Leave Team\n          </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction GameStartButton(props) {\n  return (\n    <Grid container spacing={2} justify=\"center\">\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>\n          Start\n          </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction Order(props) {\n  let nums = [];\n  props.order.forEach(num => {\n    nums.push(\n      <Grid item key={num}><Paper p={3}><Typography variant=\"h5\" align=\"center\">{num}</Typography></Paper></Grid>\n    );\n  });\n  return (\n    <Grid container spacing={1} justify=\"center\">\n      {nums}\n    </Grid>\n  );\n}\n\nfunction Round(props) {\n  let classes = makeStyles(styles);\n  let order = null;\n  let clues = [];\n  let actions = [];\n  if (props.round['clue_giver'] === props.me && !('guesses' in props.round)) {\n    if ('clues' in props.round) {\n      clues = <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>;\n    } else {\n      for (var i = 0; i < 3; ++i) {\n        let key = 'clues' + i;\n        clues.push(\n          <Grid item key={key}>\n            <TextField id={key}\n              name={i.toString()}\n              autoComplete='off'\n              label={'Clue #' + (i + 1)}\n              className={classes.clueField}\n              margin='normal'\n              onChange={props.setClues} />\n          </Grid>);\n      }\n    }\n    if ('order' in props.round) {\n      order = <Order order={props.round['order']} />;\n    }\n    if (!('clues' in props.round)) {\n      actions.push(<Button key=\"submitc\" variant=\"contained\" color=\"primary\" onClick={props.submitClues}>Submit Clues</Button>);\n    }\n  } else if ('clues' in props.round && !('guesses' in props.round)) {\n    for (i = 0; i < 3; ++i) {\n      let key = 'guesses' + i;\n      clues.push(\n        <Grid item key={key}>\n          <TextField id={key}\n            name={i.toString()}\n            autoComplete='off'\n            type='number'\n            label={props.round['clues'][i]}\n            className={classes.clueField}\n            margin='normal'\n            onChange={props.setGuesses} />\n        </Grid>);\n    }\n    actions.push(<Button key=\"submitg\" variant=\"contained\" color=\"primary\" onClick={props.submitGuesses}>Submit Guesses</Button>);\n  } else if ('spy_clues' in props.round && !('team_spy_guesses' in props.round) && 'clues' in props.round) {\n    for (i = 0; i < 3; ++i) {\n      let key = 'spyguesses' + i;\n      clues.push(\n        <Grid item key={key}>\n          <TextField id={key}\n            name={i.toString()}\n            autoComplete='off'\n            type='number'\n            label={props.round['spy_clues'][i]}\n            className={classes.clueField}\n            margin='normal'\n            onChange={props.setSpyGuesses} />\n        </Grid>);\n    }\n    actions.push(<Button key=\"submitsg\" variant=\"contained\" color=\"primary\" onClick={props.submitSpyGuesses}>Submit Spy Guesses</Button>);\n  } else if ('spy_order' in props.round && 'order' in props.round) {\n    order = (\n      <Container>\n        <Typography>Your order:</Typography>\n        <Order order={props.round['order']} />\n\n        <Typography>Your Guess:</Typography>\n        <Order order={props.round['guesses']} />\n\n        <Typography>Spies Order:</Typography>\n        <Order order={props.round['spy_order']} />\n\n        <Typography>Your Spy Guess:</Typography>\n        <Order order={props.round['team_spy_guesses']} />\n      </Container>\n    );\n    clues.push(<Grid item key={randomKey()}><Typography>Your Clues:</Typography></Grid>);\n    props.round.clues.forEach(function (clue, idx) {\n      clues.push(<Grid item key={randomKey()}><Typography>{idx + 1}. {clue}</Typography></Grid>);\n    });\n    clues.push(<Grid item key={randomKey()}><Typography>Spy Clues:</Typography></Grid>);\n    props.round.spy_clues.forEach(function (clue, idx) {\n      clues.push(<Grid item key={randomKey()}><Typography>{idx + 1}. {clue}</Typography></Grid>)\n    });\n    clues = <Grid container direction=\"column\" justify=\"center\">{clues}</Grid>\n  } else {\n    clues = <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>;\n  }\n  return (\n    <ExpansionPanel expanded={props.expanded === props.round.number} onChange={props.handleExpansion(props.round.number)}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography color=\"textPrimary\" variant=\"h6\">Round {props.round.number + 1}</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid className={classes.card} spacing={2} container>\n          {order}\n          {clues}\n        </Grid>\n      {actions}\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nfunction Chat(props) {\n  let msgs = [];\n  let formatTime = date => date.getHours() + ':' + date.getMinutes().toString().padStart(2, '0'); \n  props.chat.forEach(function (msg, idx) {\n    if ('system' in msg) {\n      msgs.push(\n        <Container key={msg.date + msg.date.getMilliseconds() + msg.name + msg.chat}>\n          <Typography display='inline'>[{formatTime(msg.date)}]</Typography>\n          <Typography display='inline' color=\"textSecondary\" fontStyle=\"italic\">: {msg.message}</Typography>\n        </Container>);\n    } else {\n      msgs.push(\n        <Container key={msg.date + msg.date.getMilliseconds() + msg.name + msg.chat}>\n          <Typography display='inline'>[{formatTime(msg.date)}]</Typography>\n          <Typography display='inline'> <b>{msg.name}</b></Typography>\n          <Typography display='inline'>: {msg.message}</Typography>\n        </Container>);\n    }\n  });\n  let onEnterPressed = event => {\n    event.preventDefault();\n    if (event.key === 'Enter') {\n      props.sendchat(event.target.value);\n      event.target.value = null;\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Container id={props.id} className={props.className}>\n        {msgs}\n      </Container>\n      <TextField name='chat' fullWidth onKeyUp={onEnterPressed} autoComplete='off' label='Press enter to send chat...' margin='normal' />\n    </React.Fragment>\n  );\n}\n\nfunction ClueView(props) {\n  let contents = [];\n  for (var i = 0; i < props.clues.length; ++i) {\n    let inner = [];\n    for (var j = 1; j < props.clues[i].length; ++j) {\n      inner.push(\n        <TableCell key={j}>{props.clues[i][j] ? props.clues[i][j] : ''}</TableCell>\n      );\n    }\n    contents.push(\n      <TableRow key={i}>\n        {inner}\n      </TableRow>\n    )\n  }\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Word 1</TableCell>\n          <TableCell>Word 2</TableCell>\n          <TableCell>Word 3</TableCell>\n          <TableCell>Word 4</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {contents}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction TabPanel(props) {\n  return (\n    <Container hidden={props.value !== props.index}>\n      {props.children}\n    </Container>\n  );\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      team_a: new Set(),\n      team_b: new Set(),\n      players: new Set(),\n      me: '',\n      host: '',\n      state: 'setup',\n      s: null,\n      connected: false,\n      message: 'Select a team to join!',\n      words: [],\n      rounds: [],\n      drawer: false,\n      clues: [],\n      guesses: [],\n      spy_guesses: [],\n      score: null,\n      expanded: false,\n      tab: 0,\n      all_chat: [],\n      team_chat: [],\n      clue_view: [],\n      spy_clue_view: [],\n    };\n  }\n\n  onMessage(msg) {\n    console.log('Got server response:');\n    console.log(msg.data);\n    if (!msg.data) return;\n    let d = null;\n    try {\n      d = JSON.parse(msg.data);\n    } catch (e) {\n      console.log(e);\n      return;\n    }\n    if (!('command' in d)) {\n      console.log('No command in response from server. ' + msg);\n      return;\n    }\n\n    switch (d['command']) {\n      case 'error': {\n        console.log('ERROR: ' + d['msg']);\n        this.error(d['msg']);\n      } break;\n      case 'player_connected': {\n        let new_players = new Set(this.state.players);\n        new_players.add(d['player']);\n        this.setState({ players: new_players });\n        if (this.state.players.size === 1) {\n          this.setState({ me: d['player'] });\n        }\n        this.push_chat('all_chat', makeSystemMessage(d['player'] + ' connected.'));\n      } break;\n      case 'player_disconnected': {\n        let new_players = new Set(this.state.players);\n        new_players.delete(d['player']);\n        this.setState({ players: new_players });\n        this.push_chat('all_chat', makeSystemMessage(d['player'] + ' disconnected.'));\n      } break;\n      case 'joined_team': {\n        if (this.state.me === d['name']) {\n          this.setState({ message: 'Waiting for game to start...' });\n        }\n        if (d['team'] === 'a') {\n          let team = new Set(this.state.team_a);\n          team.add(d['name']);\n          this.setState({ team_a: team });\n        } else if (d['team'] === 'b') {\n          let team = new Set(this.state.team_b);\n          team.add(d['name']);\n          this.setState({ team_b: team });\n        } else {\n          console.log('ERROR: joined_team: invalid team: ' + d['team']);\n          return;\n        }\n        this.push_chat('all_chat', makeSystemMessage(d['name'] + ' joined team ' + d['team'].toUpperCase()));\n      } break;\n      case 'left_team': {\n        if (d['team'] === 'a') {\n          let team = new Set(this.state.team_a);\n          team.delete(d['name']);\n          this.setState({ team_a: team });\n        } else if (d['team'] === 'b') {\n          let team = new Set(this.state.team_b);\n          team.delete(d['name']);\n          this.setState({ team_b: team });\n        } else {\n          console.log('ERROR: left_team: invalid team: ' + d['team']);\n          return;\n        }\n        this.push_chat('all_chat', makeSystemMessage(d['name'] + ' left team ' + d['team'].toUpperCase()));\n      } break;\n      case 'new_host': {\n        this.setState({ host: d['player'] });\n        this.push_chat('all_chat', makeSystemMessage(d['player'] + ' is the new host'));\n      } break;\n      case 'words': {\n        this.setState({ state: 'words' });\n        this.setState({ words: d['words'].slice(0) });\n      } break;\n      case 'round': {\n        let rounds = this.state.rounds.slice(0);\n        rounds[d['number']] = { ...rounds[d['number']], ...d };\n        if ('clues' in rounds[d['number']] && 'guesses' in rounds[d['number']]) {\n          this.setState({ rounds: rounds,\n            message: 'Guess the enemies order...',\n            spy_guesses: [],\n            expanded: d.number });\n        } else if ('clues' in rounds[d['number']]) {\n          this.setState({ rounds: rounds,\n            message: 'Match the clues with the word...',\n            guesses: [],\n            expanded: d.number });\n        } else {\n          this.setState({ rounds: rounds,\n            message: 'Waiting for clues...',\n            clues: [],\n            expanded: d.number });\n        }\n        if ('order' in d && 'spy_order' in d) {\n          let clue_view = this.state.clue_view;\n          let spy_clue_view = this.state.spy_clue_view;\n          let array = [];\n          let spy_array = [];\n          for (var i = 0; i < d.order.length; ++i) {\n            array[d.order[i]] = d.clues[i];\n            spy_array[d.spy_order[i]] = d.spy_clues[i];\n          }\n          clue_view[d.number] = array;\n          spy_clue_view[d.number] = spy_array;\n          this.setState({ clue_view: clue_view, spy_clue_view: spy_clue_view });\n        }\n      } break;\n      case 'order': {\n        let rounds = this.state.rounds.slice(0);\n        if (!rounds[d['number']]) {\n          rounds[d['number']] = {};\n        }\n        if ('order' in rounds[d['number']]) break;\n        rounds[d['number']]['order'] = d['order'];\n        this.setState({ rounds: rounds, message: 'Please give clues that match the order' });\n      } break;\n      case 'score': {\n        if ('winner' in d) {\n          this.setState({ score: d, message: d['winner'] + ' wins the game! The words are: Team A: ' + d.words.team_a + ' Team B:' + d.words.team_b });\n        } else if ('tie' in d) {\n          this.setState({ score: d, message: 'Game is a tie! The words are: Team A: ' + d.words.team_a + ' Team B:' + d.words.team_b });\n        } else {\n          this.setState({ score: d });\n        }\n      } break;\n      case 'team_chat': {\n        this.push_chat('team_chat', d);\n      } break;\n      case 'all_chat': {\n        this.push_chat('all_chat', d);\n      } break;\n      default: {\n        console.log('Unhandled: ' + d);\n      } break;\n    }\n  }\n\n  createSocket(props) {\n    let url = 'ws://' + document.domain + ':' + window.location.port + window.location.pathname + '/ws';\n    if (process.env.NODE_ENV === 'development') {\n      url = 'ws://' + document.domain + ':8080' + window.location.pathname + '/ws';\n    }\n    let s = new WebSocket(url);\n\n    s.onerror = function (e) {\n      console.log(\"ERROR:\");\n      console.log(e);\n    }\n\n    s.onmessage = msg => this.onMessage(msg);\n\n    s.onopen = _ => this.setState({ connected: true });\n    s.onclose = _ => this.setState({ connected: false });\n    return s;\n  }\n\n  componentDidMount() {\n    if (this.state.s === null) {\n      this.setState({ s: this.createSocket(this.props) });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.s === null) {\n      this.state.s.close();\n      this.setState({ s: null });\n    }\n  }\n\n  send(msg) {\n    if (!this.state.s || this.state.s.readyState !== this.state.s.OPEN) {\n      this.error('Websocket not connected! Try refreshing.');\n      return;\n    }\n    this.state.s.send(JSON.stringify(msg));\n  }\n\n  error(msg) {\n    let action = key => (\n      <Button onClick={() => { this.props.closeSnackbar(key) }}>\n        Dismiss <CancelIcon />\n      </Button>\n    );\n    this.props.enqueueSnackbar(msg, {\n      variant: 'error',\n      action\n    });\n  }\n\n  join_a() {\n    this.send({ 'command': 'join_a' });\n  }\n\n  join_b() {\n    this.send({ 'command': 'join_b' });\n  }\n\n  leave_team() {\n    this.send({ 'command': 'leave_team' });\n  }\n\n  start_game() {\n    this.send({ 'command': 'start_game' });\n  }\n\n  set_field(field, e) {\n    let obj = this.state[field];\n    let state = {};\n    if (e.target.type === 'number') {\n      obj[parseInt(e.target.name)] = parseInt(e.target.value);\n    } else {\n      obj[parseInt(e.target.name)] = e.target.value;\n    }\n    state[field] = obj;\n    this.setState(state);\n  }\n\n  submit_field(field, e) {\n    let obj = this.state[field];\n    if (obj.length !== 3) {\n      this.error('Only ' + obj.length + ' set!');\n      return;\n    }\n    if (!obj.reduce((c, v) => c && v, true)) {\n      this.error('Some ' + field + ' empty!');\n      return;\n    }\n    let state = {};\n    state[field] = [];\n    this.setState(state);\n    this.send({\n      'command': field,\n      [field]: obj,\n      'number': this.state.rounds.length - 1,\n    });\n  }\n\n  send_chat(command, message) {\n    this.send({command: command, message: message});\n  }\n\n  push_chat(type, c) {\n    let chat = this.state[type];\n    chat.push({date: new Date(), ...c});\n    this.setState({ [type]: chat });\n    let e = document.getElementById(type);\n    if (e && e.scrollTop >= e.scrollHeight - e.clientHeight - e.lastChild.clientHeight) {\n      e.scrollTop = e.scrollHeight;\n    }\n  }\n\n  getClueGiver() {\n    if (this.state.state !== 'words') return null;\n    if (this.state.rounds.length === 0) return null;\n    return this.state.rounds[this.state.rounds.length - 1]['clue_giver'];\n  }\n\n  getSpyClueGiver() {\n    if (this.state.state !== 'words') return null;\n    if (this.state.rounds.length === 0) return null;\n    return this.state.rounds[this.state.rounds.length - 1]['spy_clue_giver'];\n  }\n\n  toggleDrawer() {\n    this.setState({ drawer: !this.state.drawer });\n  }\n\n  handleExpansion(round) {\n    let self = this;\n    return (event, isExpanded) => {\n      self.setState({ expanded: isExpanded ? round : false });\n    };\n  }\n\n  handleTabChange(event, newValue) {\n    this.setState({ tab: newValue });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    let team_a_jsx = [];\n    let team_b_jsx = [];\n    let host = this.state.host;\n    let me = this.state.me;\n    let clue_giver = this.getClueGiver();\n    let spy_clue_giver = this.getSpyClueGiver();\n    [[this.state.team_a, team_a_jsx], [this.state.team_b, team_b_jsx]].forEach(function (team) {\n      team[0].forEach(function (player) {\n        let show_badge = player === clue_giver || player === spy_clue_giver ? \"CG\" : 0;\n        let color = me === player ? \"textPrimary\" : \"textSecondary\";\n        team[1].push(\n          <Grid xs item key={player}>\n            <Badge badgeContent={show_badge} color=\"secondary\" className={classes.padding}>\n              <Typography component=\"h5\" align=\"center\" color={color} key={player}>{player}</Typography>\n            </Badge>\n            <Divider />\n          </Grid>);\n      });\n    });\n\n    let buttons = [];\n    let words = [];\n    if (this.state.state === 'setup') {\n      if ((this.state.team_a.has(this.state.me) || this.state.team_b.has(this.state.me))) {\n        buttons.push(<TeamLeaveButton key=\"leave\" onClick={this.leave_team.bind(this)} />);\n        if (this.state.me === host) {\n          buttons.push(<GameStartButton key=\"start\" onClick={this.start_game.bind(this)} />);\n        }\n      } else {\n        buttons = <TeamJoinButtons key=\"join\" team_a={this.join_a.bind(this)} team_b={this.join_b.bind(this)} />;\n      }\n    } else if (this.state.words.length > 0) {\n      this.state.words.forEach(function (word, idx) {\n        words.push(\n          <Grid item key={word}>\n            <Badge badgeContent={idx + 1} color=\"secondary\">\n              <Paper className={classes.card}>\n                <Typography component=\"h1\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                  {word}\n                </Typography>\n              </Paper>\n            </Badge>\n          </Grid>);\n      });\n    }\n\n    let rounds = [];\n    let self = this;\n    this.state.rounds.forEach(function (round) {\n      rounds.push(<Grid item key={round['number']}><Round\n        round={round} me={me} expanded={self.state.expanded} handleExpansion={self.handleExpansion.bind(self)}\n        setClues={self.set_field.bind(self, 'clues')}\n        submitClues={self.submit_field.bind(self, 'clues')}\n        setGuesses={self.set_field.bind(self, 'guesses')}\n        submitGuesses={self.submit_field.bind(self, 'guesses')}\n        setSpyGuesses={self.set_field.bind(self, 'spy_guesses')}\n        submitSpyGuesses={self.submit_field.bind(self, 'spy_guesses')} /></Grid>);\n    });\n\n    let score = [];\n    if (this.state.score) {\n      score = (\n        <Container>\n          <Grid container justify=\"center\" spacing={1}>\n            <Grid item>\n              <Paper className={classes.padding}>\n                <Typography variant=\"h6\">Team A</Typography>\n                <Typography>Intercepts: {this.state.score.team_a.intercepts}</Typography>\n                <Typography>Miscommunications: {this.state.score.team_a.miscommunications}</Typography>\n              </Paper>\n            </Grid>\n            <Grid item>\n              <Paper className={classes.padding}>\n                <Typography variant=\"h6\">Team B</Typography>\n                <Typography>Intercepts: {this.state.score.team_b.intercepts}</Typography>\n                <Typography>Miscommunications: {this.state.score.team_b.miscommunications}</Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <MenuIcon className={classes.icon} onClick={this.toggleDrawer.bind(this)} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Decrypto\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer open={this.state.drawer} onClose={this.toggleDrawer.bind(this)}>\n          <Container>\n            <Paper>\n              <Typography component=\"h3\" variant=\"h5\" align=\"center\" color=\"textPrimary\" className={classes.teamName}>Team A</Typography>\n              {team_a_jsx}\n            </Paper>\n            <Paper>\n              <Typography component=\"h3\" variant=\"h5\" align=\"center\" color=\"textPrimary\" className={classes.teamName}>Team B</Typography>\n              {team_b_jsx}\n            </Paper>\n          </Container>\n        </Drawer>\n        <Dialog open={!this.state.connected}>\n          <DialogContent>\n            <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>\n            <Typography component=\"h2\" align=\"center\">Waiting for WebSocket connection...</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={_ => window.location.reload(false)} color=\"primary\">\n              Refresh\n          </Button>\n          </DialogActions>\n        </Dialog>\n        <Container className={classes.heroContent}>\n          <Container>\n            {score}\n          </Container>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              {this.state.message}\n            </Typography>\n          </Container>\n          <Container className={classes.heroButtons}>\n            {buttons}\n          </Container>\n          <Container className={classes.icon}>\n            <Grid container spacing={2} justify=\"center\">\n              {words}\n            </Grid>\n          </Container>\n        </Container>\n        <Container>\n          {rounds}\n        </Container>\n        <Container className={classes.bottomBar}>\n          <AppBar elevation={0} className={classes.appBar} position=\"static\">\n            <Tabs value={this.state.tab} onChange={this.handleTabChange.bind(this)} scrollButtons=\"on\" variant=\"scrollable\">\n              <Tab label=\"All Chat\" index={0} />\n              <Tab label=\"Team Chat\" index={1} />\n              <Tab label=\"Clue View\" index={2} />\n              <Tab label=\"Spy Clue View\" index={3} />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={this.state.tab} index={0}>\n            <Chat id='all_chat' className={classes.chatBox} sendchat={this.send_chat.bind(this, 'all_chat')} chat={this.state.all_chat} />\n          </TabPanel>\n          <TabPanel value={this.state.tab} index={1}>\n            <Chat id='team_chat' className={classes.chatBox} sendchat={this.send_chat.bind(this, 'team_chat')} chat={this.state.team_chat} />\n          </TabPanel>\n          <TabPanel value={this.state.tab} index={2}>\n            <ClueView clues={this.state.clue_view} />\n          </TabPanel>\n          <TabPanel value={this.state.tab} index={3}>\n            <ClueView clues={this.state.spy_clue_view} />\n          </TabPanel>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(withStyles(styles)(Game));\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Lobby from './components/lobby';\nimport Game from './components/game';\nimport { SnackbarProvider } from 'notistack';\n\nfunction App() {\n  return (\n    <SnackbarProvider maxSnack={3}>\n        <main>\n          <Router>\n            <Route exact path=\"/\" component={Lobby} />\n            <Route path=\"/game\" component={Game} />\n          </Router>\n        </main>\n    </SnackbarProvider>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}