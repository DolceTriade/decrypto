{"version":3,"sources":["components/lobby.js","components/game.js","index.js"],"names":["Lobby","props","state","s","connected","console","log","WebSocket","document","domain","onmessage","msg","d","JSON","parse","data","e","url","URL","history","push","pathname","this","enqueueSnackbar","variant","onopen","_","setState","onclose","name","getElementById","value","room","send","stringify","command","createSocket","close","classes","Fragment","CssBaseline","AppBar","position","Toolbar","Typography","color","noWrap","Dialog","open","DialogContent","Grid","container","justify","CircularProgress","disableShrink","component","align","DialogActions","Button","onClick","window","location","reload","className","heroContent","Container","maxWidth","gutterBottom","paragraph","Paper","TextField","id","label","textField","margin","heroButtons","join_or_create","bind","React","Component","withSnackbar","withRouter","withStyles","theme","icon","marginRight","spacing","backgroundColor","palette","background","paper","padding","display","flexDirection","marginBottom","marginTop","marginLeft","width","styles","height","fontSize","teamName","paddingBottom","words","clueField","card","randomKey","Math","random","toString","TeamJoinButtons","item","team_a","team_b","TeamLeaveButton","GameStartButton","Order","makeStyles","nums","order","forEach","num","key","p","Round","clues","actions","round","me","i","autoComplete","type","onChange","setGuesses","submitGuesses","setSpyGuesses","submitSpyGuesses","clue","idx","spy_clues","direction","setClues","submitClues","Card","CardHeader","title","number","CardContent","CardActions","Game","Set","players","host","message","rounds","drawer","guesses","spy_guesses","score","error","new_players","add","size","delete","team","slice","onerror","onMessage","readyState","OPEN","action","closeSnackbar","field","obj","target","parseInt","length","reduce","c","v","team_a_jsx","team_b_jsx","clue_giver","getClueGiver","spy_clue_giver","getSpyClueGiver","player","show_badge","xs","Badge","badgeContent","Divider","buttons","has","leave_team","start_game","join_a","join_b","word","self","set_field","submit_field","intercepts","miscommunications","toggleDrawer","Drawer","onClose","useStyles","cardGrid","paddingTop","cardMedia","cardContent","flexGrow","footer","ReactDOM","render","maxSnack","exact","path"],"mappings":"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","file":"static/js/main.d002b6b5.chunk.js","sourcesContent":["import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport { withRouter } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField'\nimport { withSnackbar } from 'notistack';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: theme.spacing(1)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n})\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      s: null,\n      connected: false,\n    };\n  }\n\n  createSocket(props) {\n    console.log('CREATING SOCKET')\n    let s = new WebSocket('ws://' + document.domain + ':8080' + '/lobby_ws')\n    s.onmessage = function (msg) {\n      console.log('Got server response:')\n      console.log(msg)\n      let d = null\n      try {\n        d = JSON.parse(msg.data)\n      } catch (e) {\n        console.log(e)\n        return\n      }\n      if (!('command' in d)) {\n        console.log('No command in response from server. ' + msg)\n        return\n      }\n\n      switch (d['command']) {\n        case 'join_game':\n          {\n            let url = new URL(d['game'])\n            props.history.push({ pathname: url.pathname })\n          }\n          break\n        case 'error':\n          {\n            console.log('ERROR: ' + d['msg'])\n            this.props.enqueueSnackbar(d['msg'], {\n              variant: 'error',\n            });\n          }\n          break\n        default:\n          {\n            console.log('Unhandled command: ' + d)\n          }\n          break\n      }\n    }\n\n    s.onopen = _ => this.setState({ connected: true });\n    s.onclose = _ => this.setState({ connected: false });\n\n    return s\n  }\n\n  join_or_create() {\n    let name = document.getElementById('name').value\n    let room = document.getElementById('room').value\n    if (!name) {\n      // TODO: replace with toast\n      console.log('ERROR: Name cannot be empty.')\n      return\n    }\n    if (!room) {\n      // TODO: replace with toast\n      console.log('ERROR: Room cannot be empty.')\n      return\n    }\n    this.state.s.send(\n      JSON.stringify({ command: 'join_or_create_game', name: name, room: room })\n    )\n  }\n\n  componentDidMount() {\n    console.log(\"LOBBY MOUNT\");\n    console.log(this.state);\n    if (this.state.s === null) {\n      this.setState({ s: this.createSocket(this.props) })\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"LOBBY UNMOUNT\");\n    if (this.state.s === null) {\n      this.state.s.close()\n      this.setState({ s: null })\n    }\n  }\n\n  render() {\n    const classes = this.props.classes\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Decrypto\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Dialog open={!this.state.connected}>\n          <DialogContent>\n            <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>\n            <Typography component=\"h2\" align=\"center\">Waiting for WebSocket connection...</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={_ => window.location.reload(false)} color=\"primary\">\n              Refresh\n          </Button>\n          </DialogActions>\n        </Dialog>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth='sm'>\n            <Typography\n              component='h1'\n              variant='h2'\n              align='center'\n              color='textPrimary'\n              gutterBottom\n            >\n              Decrypto\n            </Typography>\n            <Typography\n              variant='h5'\n              align='center'\n              color='textSecondary'\n              paragraph\n            >\n              Enter a game name and user name to join or create a game!\n            </Typography>\n          </Container>\n          <Container>\n            <Paper align='center'>\n              <TextField\n                id='name'\n                label='Name'\n                className={classes.textField}\n                margin='normal'\n              />\n              <TextField\n                id='room'\n                label='Room'\n                className={classes.textField}\n                margin='normal'\n              />\n              <br />\n              <Button\n                variant='contained'\n                color='primary'\n                className={classes.heroButtons}\n                onClick={this.join_or_create.bind(this)}\n              >\n                Join or Create Game\n              </Button>\n            </Paper>\n          </Container>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withSnackbar(withRouter(withStyles(styles)(Lobby)));\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Badge from '@material-ui/core/Badge';\nimport { withSnackbar } from 'notistack';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport TextField from '@material-ui/core/TextField'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst styles = theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    height: 'available',\n    width: 'available',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: theme.spacing(1),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  padding: {\n    padding: theme.spacing(0, 2),\n    marginBottom: theme.spacing(1),\n    fontSize: 12,\n  },\n  teamName: {\n    paddingBottom: theme.spacing(1),\n  },\n  words: {\n    padding: '0.25em',\n  },\n  clueField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  card: {\n    padding: theme.spacing(1),\n  }\n});\n\nlet randomKey = _ => Math.random().toString(36);\n\nfunction TeamJoinButtons(props) {\n  return (\n    <Grid container spacing={2} justify=\"center\">\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.team_a}>\n          Team A\n          </Button>\n      </Grid>\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.team_b}>\n          Team B\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction TeamLeaveButton(props) {\n  return (\n    <Grid container spacing={2} justify=\"center\">\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>\n          Leave Team\n          </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction GameStartButton(props) {\n  return (\n    <Grid container spacing={2} justify=\"center\">\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>\n          Start\n          </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction Order(props) {\n  let classes = makeStyles(styles);\n  let nums = [];\n  props.order.forEach(num => {\n    nums.push(\n      <Grid item key={num}><Paper p={3}><Typography variant=\"h5\" align=\"center\">{num}</Typography></Paper></Grid>\n    );\n  });\n  return (\n    <Grid container spacing={1} justify=\"center\">\n      {nums}\n    </Grid>\n  );\n}\n\nfunction Round(props) {\n  let classes = makeStyles(styles);\n  let order = null;\n  let clues = [];\n  let actions = [];\n  console.log(props);\n  if (props.round['clue_giver'] === props.me && !('guesses' in props.round)) {\n    if ('clues' in props.round) {\n      clues = <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>;\n    } else {\n      for (var i = 0; i < 3; ++i) {\n        let key = 'clues' + i;\n        clues.push(\n          <Grid item key={key}>\n            <TextField id={key}\n              name={i.toString()}\n              autoComplete='off'\n              label={'Clue #' + (i + 1)}\n              className={classes.clueField}\n              margin='normal'\n              onChange={props.setClues} />\n          </Grid>);\n      }\n    }\n    if ('order' in props.round) {\n      order = <Order order={props.round['order']} />;\n    }\n    if (!('clues' in props.round)) {\n      actions.push(<Button key=\"submitc\" variant=\"contained\" color=\"primary\" onClick={props.submitClues}>Submit Clues</Button>);\n    }\n  } else if ('clues' in props.round && !('guesses' in props.round)) {\n    for (var i = 0; i < 3; ++i) {\n      let key = 'guesses' + i;\n      clues.push(\n        <Grid item key={key}>\n          <TextField id={key}\n            name={i.toString()}\n            autoComplete='off'\n            type='number'\n            label={props.round['clues'][i]}\n            className={classes.clueField}\n            margin='normal'\n            onChange={props.setGuesses} />\n        </Grid>);\n    }\n    actions.push(<Button key=\"submitg\" variant=\"contained\" color=\"primary\" onClick={props.submitGuesses}>Submit Guesses</Button>);\n  } else if ('spy_clues' in props.round && !('team_spy_guesses' in props.round) && 'clues' in props.round) {\n    for (var i = 0; i < 3; ++i) {\n      let key = 'spyguesses' + i;\n      clues.push(\n        <Grid item key={key}>\n          <TextField id={key}\n            name={i.toString()}\n            autoComplete='off'\n            type='number'\n            label={props.round['spy_clues'][i]}\n            className={classes.clueField}\n            margin='normal'\n            onChange={props.setSpyGuesses} />\n        </Grid>);\n    }\n    actions.push(<Button key=\"submitsg\" variant=\"contained\" color=\"primary\" onClick={props.submitSpyGuesses}>Submit Spy Guesses</Button>);\n  } else if ('spy_order' in props.round && 'order' in props.round) {\n    order = (\n      <Container>\n        <Typography>Your order:</Typography>\n        <Order order={props.round['order']} />\n\n        <Typography>Your Guess:</Typography>\n        <Order order={props.round['guesses']} />\n\n        <Typography>Spies Order:</Typography>\n        <Order order={props.round['spy_order']} />\n\n        <Typography>Your Spy Guess:</Typography>\n        <Order order={props.round['team_spy_guesses']} />\n      </Container>\n    );\n    clues.push(<Grid item key={randomKey()}><Typography>Your Clues:</Typography></Grid>);\n    props.round.clues.forEach(function (clue, idx) {\n      clues.push(<Grid item key={randomKey()}><Typography>{idx + 1}. {clue}</Typography></Grid>);\n    });\n    clues.push(<Grid item key={randomKey()}><Typography>Spy Clues:</Typography></Grid>);\n    props.round.spy_clues.forEach(function (clue, idx) {\n      clues.push(<Grid item key={randomKey()}><Typography>{idx + 1}. {clue}</Typography></Grid>)\n    });\n    clues = <Grid container direction=\"column\" justify=\"center\">{clues}</Grid>\n  } else {\n    clues = <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>;\n  }\n  return (\n    <Card>\n      <CardHeader title={\"Round \" + (props.round.number + 1)} />\n      <CardContent>\n        <Grid className={classes.card} spacing={2} container>\n          {order}\n          {clues}\n        </Grid>\n      </CardContent>\n      <CardActions>{actions}</CardActions>\n    </Card>\n  )\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      team_a: new Set(),\n      team_b: new Set(),\n      players: new Set(),\n      me: '',\n      host: '',\n      state: 'setup',\n      s: null,\n      connected: false,\n      message: 'Select a team to join!',\n      words: [],\n      rounds: [],\n      drawer: false,\n      clues: [],\n      guesses: [],\n      spy_guesses: [],\n      score: null,\n    };\n  }\n\n  onMessage(msg) {\n    console.log('Got server response:');\n    console.log(msg.data);\n    if (!msg.data) return;\n    let d = null;\n    try {\n      d = JSON.parse(msg.data);\n    } catch (e) {\n      console.log(e);\n      return;\n    }\n    if (!('command' in d)) {\n      console.log('No command in response from server. ' + msg);\n      return;\n    }\n\n    switch (d['command']) {\n      case 'error': {\n        console.log('ERROR: ' + d['msg']);\n        this.error(d['msg']);\n      } break;\n      case 'player_connected': {\n        let new_players = new Set(this.state.players);\n        new_players.add(d['player']);\n        this.setState({ players: new_players });\n        if (this.state.players.size == 1) {\n          this.setState({ me: d['player'] });\n        }\n      } break;\n      case 'player_disconnected': {\n        let new_players = new Set(this.state.players);\n        new_players.delete(d['player']);\n        this.setState({ players: new_players });\n        // on_player_disconnected(d['player']);\n      } break;\n      case 'joined_team': {\n        console.log(d);\n        if (this.state.me === d['name']) {\n          this.setState({ message: 'Waiting for game to start...' });\n        }\n        if (d['team'] === 'a') {\n          let team = new Set(this.state.team_a);\n          team.add(d['name']);\n          this.setState({ team_a: team });\n        } else if (d['team'] === 'b') {\n          let team = new Set(this.state.team_b);\n          team.add(d['name']);\n          this.setState({ team_b: team });\n        } else {\n          console.log('ERROR: joined_team: invalid team: ' + d['team']);\n          return;\n        }\n      } break;\n      case 'left_team': {\n        if (d['team'] === 'a') {\n          let team = new Set(this.state.team_a);\n          team.delete(d['name']);\n          this.setState({ team_a: team });\n        } else if (d['team'] === 'b') {\n          let team = new Set(this.state.team_b);\n          team.delete(d['name']);\n          this.setState({ team_b: team });\n\n        } else {\n          console.log('ERROR: left_team: invalid team: ' + d['team']);\n          return;\n        }\n      } break;\n      case 'new_host': {\n        this.setState({ host: d['player'] });\n      } break;\n      case 'words': {\n        this.setState({ state: 'words' });\n        this.setState({ words: d['words'].slice(0) });\n      } break;\n      case 'round': {\n        let rounds = this.state.rounds.slice(0);\n        rounds[d['number']] = { ...rounds[d['number']], ...d };\n        if ('clues' in rounds[d['number']] && 'guesses' in rounds[d['number']]) {\n          this.setState({ rounds: rounds, message: 'Guess the enemies order...', spy_guesses: [] });\n        } else if ('clues' in rounds[d['number']]) {\n          this.setState({ rounds: rounds, message: 'Match the clues with the word...', guesses: [] });\n        } else {\n          this.setState({ rounds: rounds, message: 'Waiting for clues...', clues: [] });\n        }\n      } break;\n      case 'order': {\n        console.log(this.state.rounds);\n        console.log(d);\n        let rounds = this.state.rounds.slice(0);\n        if (!rounds[d['number']]) {\n          rounds[d['number']] = {};\n        }\n        if ('order' in rounds[d['number']]) break;\n        rounds[d['number']]['order'] = d['order'];\n        this.setState({ rounds: rounds, message: 'Please give clues that match the order' });\n      } break;\n      case 'score': {\n        if ('winner' in d) {\n          this.setState({ score: d, message: d['winner'] + ' wins the game! The words are: Team A: ' + d.words.team_a + ' Team B:' + d.words.team_b });\n        } else if ('tie' in d) {\n          this.setState({ score: d, message: 'Game is a tie! The words are: Team A: ' + d.words.team_a + ' Team B:' + d.words.team_b });\n        } else {\n          this.setState({ score: d });\n        }\n      } break;\n      default: {\n        console.log('Unhandled: ' + d);\n      } break;\n    }\n  }\n\n  createSocket(props) {\n    console.log(\"CREATING SOCKET\");\n    let s = new WebSocket('ws://' + document.domain + ':8080' + window.location.pathname + '/ws')\n\n    s.onerror = function (e) {\n      console.log(\"ERROR:\");\n      console.log(e);\n    }\n\n    s.onmessage = msg => this.onMessage(msg);\n\n    s.onopen = _ => this.setState({ connected: true });\n    s.onclose = _ => this.setState({ connected: false });\n    return s;\n  }\n\n  componentDidMount() {\n    console.log(\"GAME MOUNT\");\n    console.log(this.state);\n    if (this.state.s === null) {\n      this.setState({ s: this.createSocket(this.props) });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.s === null) {\n      this.state.s.close();\n      this.setState({ s: null });\n    }\n  }\n\n  send(msg) {\n    if (!this.state.s || this.state.s.readyState !== this.state.s.OPEN) {\n      this.error('Websocket not connected! Try refreshing.');\n      return;\n    }\n    this.state.s.send(JSON.stringify(msg));\n  }\n\n  error(msg) {\n    let action = key => (\n      <Button onClick={() => { this.props.closeSnackbar(key) }}>\n        Dismiss <CancelIcon />\n      </Button>\n    );\n    this.props.enqueueSnackbar(msg, {\n      variant: 'error',\n      action\n    });\n  }\n\n  join_a() {\n    this.send({ 'command': 'join_a' });\n  }\n\n  join_b() {\n    this.send({ 'command': 'join_b' });\n  }\n\n  leave_team() {\n    this.send({ 'command': 'leave_team' });\n  }\n\n  start_game() {\n    this.send({ 'command': 'start_game' });\n  }\n\n  set_field(field, e) {\n    let obj = this.state[field];\n    let state = {};\n    if (e.target.type == 'number') {\n      obj[parseInt(e.target.name)] = parseInt(e.target.value);\n    } else {\n      obj[parseInt(e.target.name)] = e.target.value;\n    }\n    state[field] = obj;\n    this.setState(state);\n  }\n\n  submit_field(field, e) {\n    let obj = this.state[field];\n    if (obj.length != 3) {\n      this.error('Only ' + obj.length + ' set!');\n      return;\n    }\n    if (!obj.reduce((c, v) => c && v, true)) {\n      this.error('Some ' + field + ' empty!');\n      return;\n    }\n    let state = {};\n    state[field] = [];\n    this.setState(state);\n    this.send({\n      'command': field,\n      [field]: obj,\n      'number': this.state.rounds.length - 1,\n    });\n  }\n\n  getClueGiver() {\n    if (this.state.state !== 'words') return null;\n    if (this.state.rounds.length == 0) return null;\n    return this.state.rounds[this.state.rounds.length - 1]['clue_giver'];\n  }\n\n  getSpyClueGiver() {\n    if (this.state.state !== 'words') return null;\n    if (this.state.rounds.length == 0) return null;\n    return this.state.rounds[this.state.rounds.length - 1]['spy_clue_giver'];\n  }\n\n  toggleDrawer() {\n    this.setState({ drawer: !this.state.drawer });\n  }\n\n  render() {\n    console.log('RENDER GAME');\n    console.log(this.state);\n    const classes = this.props.classes;\n    let team_a_jsx = [];\n    let team_b_jsx = [];\n    let host = this.state.host;\n    let me = this.state.me;\n    let clue_giver = this.getClueGiver();\n    let spy_clue_giver = this.getSpyClueGiver();\n    [[this.state.team_a, team_a_jsx], [this.state.team_b, team_b_jsx]].forEach(function (team) {\n      team[0].forEach(function (player) {\n        let show_badge = player == clue_giver || player == spy_clue_giver ? \"CG\" : 0;\n        let color = me === player ? \"textPrimary\" : \"textSecondary\";\n        team[1].push(\n          <Grid xs item key={player}>\n            <Badge badgeContent={show_badge} color=\"secondary\" className={classes.padding}>\n              <Typography component=\"h5\" align=\"center\" color={color} key={player}>{player}</Typography>\n            </Badge>\n            <Divider />\n          </Grid>);\n      });\n    });\n\n    let buttons = [];\n    let words = [];\n    if (this.state.state === 'setup') {\n      if ((this.state.team_a.has(this.state.me) || this.state.team_b.has(this.state.me))) {\n        buttons.push(<TeamLeaveButton key=\"leave\" onClick={this.leave_team.bind(this)} />);\n        if (this.state.me === host) {\n          buttons.push(<GameStartButton key=\"start\" onClick={this.start_game.bind(this)} />);\n        }\n      } else {\n        buttons = <TeamJoinButtons key=\"join\" team_a={this.join_a.bind(this)} team_b={this.join_b.bind(this)} />;\n      }\n    } else if (this.state.words.length > 0) {\n      this.state.words.forEach(function (word, idx) {\n        words.push(\n          <Grid item key={word}>\n            <Badge badgeContent={idx + 1} color=\"secondary\">\n              <Paper className={classes.card}>\n                <Typography component=\"h1\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                  {word}\n                </Typography>\n              </Paper>\n            </Badge>\n          </Grid>);\n      });\n    }\n\n    let rounds = [];\n    let self = this;\n    this.state.rounds.forEach(function (round) {\n      rounds.push(<Grid item key={round['number']}><Round\n        round={round} me={me}\n        setClues={self.set_field.bind(self, 'clues')}\n        submitClues={self.submit_field.bind(self, 'clues')}\n        setGuesses={self.set_field.bind(self, 'guesses')}\n        submitGuesses={self.submit_field.bind(self, 'guesses')}\n        setSpyGuesses={self.set_field.bind(self, 'spy_guesses')}\n        submitSpyGuesses={self.submit_field.bind(self, 'spy_guesses')} /></Grid>);\n    });\n\n    let score = [];\n    if (this.state.score) {\n      score = (\n        <Container>\n          <Grid container justify=\"center\" spacing={1}>\n            <Grid item>\n              <Paper className={classes.padding}>\n                <Typography variant=\"h6\">Team A</Typography>\n                <Typography>Intercepts: {this.state.score.team_a.intercepts}</Typography>\n                <Typography>Miscommunications: {this.state.score.team_a.miscommunications}</Typography>\n              </Paper>\n            </Grid>\n            <Grid item>\n              <Paper className={classes.padding}>\n                <Typography variant=\"h6\">Team B</Typography>\n                <Typography>Intercepts: {this.state.score.team_b.intercepts}</Typography>\n                <Typography>Miscommunications: {this.state.score.team_b.miscommunications}</Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <MenuIcon className={classes.icon} onClick={this.toggleDrawer.bind(this)} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Decrypto\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer open={this.state.drawer} onClose={this.toggleDrawer.bind(this)}>\n          <Container>\n            <Paper>\n              <Typography component=\"h3\" variant=\"h5\" align=\"center\" color=\"textPrimary\" className={classes.teamName}>Team A</Typography>\n              {team_a_jsx}\n            </Paper>\n            <Paper>\n              <Typography component=\"h3\" variant=\"h5\" align=\"center\" color=\"textPrimary\" className={classes.teamName}>Team B</Typography>\n              {team_b_jsx}\n            </Paper>\n          </Container>\n        </Drawer>\n        <Dialog open={!this.state.connected}>\n          <DialogContent>\n            <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>\n            <Typography component=\"h2\" align=\"center\">Waiting for WebSocket connection...</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={_ => window.location.reload(false)} color=\"primary\">\n              Refresh\n          </Button>\n          </DialogActions>\n        </Dialog>\n        <Container className={classes.heroContent}>\n          <Container>\n            {score}\n          </Container>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              {this.state.message}\n            </Typography>\n          </Container>\n          <Container className={classes.heroButtons}>\n            {buttons}\n          </Container>\n          <Container className={classes.icon}>\n            <Grid container spacing={2} justify=\"center\">\n              {words}\n            </Grid>\n          </Container>\n        </Container>\n        <Container>\n          <Grid container spacing={2} justify=\"center\">\n            {rounds}\n          </Grid>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(withStyles(styles)(Game));\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Lobby from './components/lobby';\nimport Game from './components/game';\nimport { SnackbarProvider } from 'notistack';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Decrypto\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <SnackbarProvider maxSnack={3}>\n        <main>\n          <Router>\n            <Route exact path=\"/\" component={Lobby} />\n            <Route path=\"/game\" component={Game} />\n          </Router>\n        </main>\n    </SnackbarProvider>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}