{"version":3,"sources":["components/lobby.js","components/game.js","index.js"],"names":["Lobby","props","state","s","connected","url","document","domain","window","location","port","WebSocket","onmessage","msg","console","log","d","JSON","parse","data","e","URL","history","push","pathname","this","enqueueSnackbar","variant","onopen","_","setState","onclose","name","getElementById","value","room","send","stringify","command","createSocket","close","classes","Fragment","CssBaseline","AppBar","position","Toolbar","Typography","color","noWrap","Dialog","open","DialogContent","Grid","container","justify","CircularProgress","disableShrink","component","align","DialogActions","Button","onClick","reload","className","heroContent","Container","maxWidth","gutterBottom","paragraph","Paper","TextField","id","label","textField","margin","heroButtons","join_or_create","bind","React","Component","withSnackbar","withRouter","withStyles","theme","icon","marginRight","spacing","backgroundColor","palette","background","paper","padding","display","flexDirection","marginBottom","marginTop","marginLeft","width","styles","height","fontSize","teamName","paddingBottom","words","clueField","card","bottomBar","overflow","left","bottom","chatBox","randomKey","Math","random","toString","TeamJoinButtons","item","team_a","team_b","TeamLeaveButton","GameStartButton","Order","nums","order","forEach","num","key","p","Round","makeStyles","clues","actions","round","me","i","autoComplete","type","onChange","setGuesses","submitGuesses","setSpyGuesses","submitSpyGuesses","clue","idx","spy_clues","direction","setClues","submitClues","ExpansionPanel","expanded","number","handleExpansion","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","Chat","msgs","chat","date","getMilliseconds","getHours","getMinutes","message","fullWidth","onKeyUp","event","preventDefault","sendchat","target","ClueView","contents","length","inner","j","TableCell","TableRow","Table","TableHead","TableBody","TabPanel","hidden","index","children","Game","Set","players","host","rounds","drawer","guesses","spy_guesses","score","tab","all_chat","team_chat","clue_view","spy_clue_view","error","new_players","add","size","delete","team","slice","array","spy_array","spy_order","Date","scrollTop","scrollHeight","clientHeight","lastChild","onerror","onMessage","readyState","OPEN","action","closeSnackbar","field","obj","parseInt","reduce","c","v","self","isExpanded","newValue","team_a_jsx","team_b_jsx","clue_giver","getClueGiver","spy_clue_giver","getSpyClueGiver","player","show_badge","xs","Badge","badgeContent","Divider","buttons","has","leave_team","start_game","join_a","join_b","word","set_field","submit_field","intercepts","miscommunications","toggleDrawer","Drawer","onClose","Tabs","handleTabChange","Tab","send_chat","ReactDOM","render","maxSnack","exact","path"],"mappings":"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","file":"static/js/main.af5e5389.chunk.js","sourcesContent":["import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport { withRouter } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField'\nimport { withSnackbar } from 'notistack';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst styles = theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: theme.spacing(1)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n})\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      s: null,\n      connected: false,\n    };\n  }\n\n  createSocket(props) {\n    let url = 'ws://' + document.domain + ':' + window.location.port + '/lobby_ws';\n    if (process.env.NODE_ENV === 'development') {\n      url = 'ws://' + document.domain + ':8080/lobby_ws';\n    }\n    let s = new WebSocket(url);\n    s.onmessage = function (msg) {\n      console.log('Got server response:')\n      console.log(msg)\n      let d = null\n      try {\n        d = JSON.parse(msg.data)\n      } catch (e) {\n        console.log(e)\n        return\n      }\n      if (!('command' in d)) {\n        console.log('No command in response from server. ' + msg)\n        return\n      }\n\n      switch (d['command']) {\n        case 'join_game':\n          {\n            let url = new URL(d['game'])\n            props.history.push({ pathname: url.pathname })\n          }\n          break\n        case 'error':\n          {\n            console.log('ERROR: ' + d['msg'])\n            this.props.enqueueSnackbar(d['msg'], {\n              variant: 'error',\n            });\n          }\n          break\n        default:\n          {\n            console.log('Unhandled command: ' + d)\n          }\n          break\n      }\n    }\n\n    s.onopen = _ => this.setState({ connected: true });\n    s.onclose = _ => this.setState({ connected: false });\n\n    return s\n  }\n\n  join_or_create() {\n    let name = document.getElementById('name').value\n    let room = document.getElementById('room').value\n    if (!name) {\n      // TODO: replace with toast\n      console.log('ERROR: Name cannot be empty.')\n      return\n    }\n    if (!room) {\n      // TODO: replace with toast\n      console.log('ERROR: Room cannot be empty.')\n      return\n    }\n    this.state.s.send(\n      JSON.stringify({ command: 'join_or_create_game', name: name, room: room })\n    )\n  }\n\n  componentDidMount() {\n    console.log(\"LOBBY MOUNT\");\n    console.log(this.state);\n    if (this.state.s === null) {\n      this.setState({ s: this.createSocket(this.props) })\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"LOBBY UNMOUNT\");\n    if (this.state.s === null) {\n      this.state.s.close()\n      this.setState({ s: null })\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Decrypto\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Dialog open={!this.state.connected}>\n          <DialogContent>\n            <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>\n            <Typography component=\"h2\" align=\"center\">Waiting for WebSocket connection...</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={_ => window.location.reload(false)} color=\"primary\">\n              Refresh\n          </Button>\n          </DialogActions>\n        </Dialog>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth='sm'>\n            <Typography\n              component='h1'\n              variant='h2'\n              align='center'\n              color='textPrimary'\n              gutterBottom\n            >\n              Decrypto\n            </Typography>\n            <Typography\n              variant='h5'\n              align='center'\n              color='textSecondary'\n              paragraph\n            >\n              Enter a game name and user name to join or create a game!\n            </Typography>\n          </Container>\n          <Container>\n            <Paper align='center'>\n              <TextField\n                id='name'\n                label='Name'\n                className={classes.textField}\n                margin='normal'\n              />\n              <TextField\n                id='room'\n                label='Room'\n                className={classes.textField}\n                margin='normal'\n              />\n              <br />\n              <Button\n                variant='contained'\n                color='primary'\n                className={classes.heroButtons}\n                onClick={this.join_or_create.bind(this)}\n              >\n                Join or Create Game\n              </Button>\n            </Paper>\n          </Container>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withSnackbar(withRouter(withStyles(styles)(Lobby)));\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Badge from '@material-ui/core/Badge';\nimport { withSnackbar } from 'notistack';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport TextField from '@material-ui/core/TextField'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    height: 'available',\n    width: 'available',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: theme.spacing(1),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  padding: {\n    padding: theme.spacing(0, 2),\n    marginBottom: theme.spacing(1),\n    fontSize: 12,\n  },\n  teamName: {\n    paddingBottom: theme.spacing(1),\n  },\n  words: {\n    padding: '0.25em',\n  },\n  clueField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  card: {\n    padding: theme.spacing(1),\n  },\n  bottomBar: {\n    overflow: 'none',\n    left: 0,\n    bottom: 0,\n    height: theme.spacing(10),\n  },\n  chatBox: {\n    width: '100%',\n    overflow: 'auto',\n    left: 0,\n    bottom: 0,\n    height: theme.spacing(10),\n  }\n});\n\nlet randomKey = _ => Math.random().toString(36);\n\nfunction TeamJoinButtons(props) {\n  return (\n    <Grid container spacing={2} justify=\"center\">\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.team_a}>\n          Team A\n          </Button>\n      </Grid>\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.team_b}>\n          Team B\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction TeamLeaveButton(props) {\n  return (\n    <Grid container spacing={2} justify=\"center\">\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>\n          Leave Team\n          </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction GameStartButton(props) {\n  return (\n    <Grid container spacing={2} justify=\"center\">\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>\n          Start\n          </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction Order(props) {\n  let nums = [];\n  props.order.forEach(num => {\n    nums.push(\n      <Grid item key={num}><Paper p={3}><Typography variant=\"h5\" align=\"center\">{num}</Typography></Paper></Grid>\n    );\n  });\n  return (\n    <Grid container spacing={1} justify=\"center\">\n      {nums}\n    </Grid>\n  );\n}\n\nfunction Round(props) {\n  let classes = makeStyles(styles);\n  let order = null;\n  let clues = [];\n  let actions = [];\n  if (props.round['clue_giver'] === props.me && !('guesses' in props.round)) {\n    if ('clues' in props.round) {\n      clues = <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>;\n    } else {\n      for (var i = 0; i < 3; ++i) {\n        let key = 'clues' + i;\n        clues.push(\n          <Grid item key={key}>\n            <TextField id={key}\n              name={i.toString()}\n              autoComplete='off'\n              label={'Clue #' + (i + 1)}\n              className={classes.clueField}\n              margin='normal'\n              onChange={props.setClues} />\n          </Grid>);\n      }\n    }\n    if ('order' in props.round) {\n      order = <Order order={props.round['order']} />;\n    }\n    if (!('clues' in props.round)) {\n      actions.push(<Button key=\"submitc\" variant=\"contained\" color=\"primary\" onClick={props.submitClues}>Submit Clues</Button>);\n    }\n  } else if ('clues' in props.round && !('guesses' in props.round)) {\n    for (i = 0; i < 3; ++i) {\n      let key = 'guesses' + i;\n      clues.push(\n        <Grid item key={key}>\n          <TextField id={key}\n            name={i.toString()}\n            autoComplete='off'\n            type='number'\n            label={props.round['clues'][i]}\n            className={classes.clueField}\n            margin='normal'\n            onChange={props.setGuesses} />\n        </Grid>);\n    }\n    actions.push(<Button key=\"submitg\" variant=\"contained\" color=\"primary\" onClick={props.submitGuesses}>Submit Guesses</Button>);\n  } else if ('spy_clues' in props.round && !('team_spy_guesses' in props.round) && 'clues' in props.round) {\n    for (i = 0; i < 3; ++i) {\n      let key = 'spyguesses' + i;\n      clues.push(\n        <Grid item key={key}>\n          <TextField id={key}\n            name={i.toString()}\n            autoComplete='off'\n            type='number'\n            label={props.round['spy_clues'][i]}\n            className={classes.clueField}\n            margin='normal'\n            onChange={props.setSpyGuesses} />\n        </Grid>);\n    }\n    actions.push(<Button key=\"submitsg\" variant=\"contained\" color=\"primary\" onClick={props.submitSpyGuesses}>Submit Spy Guesses</Button>);\n  } else if ('spy_order' in props.round && 'order' in props.round) {\n    order = (\n      <Container>\n        <Typography>Your order:</Typography>\n        <Order order={props.round['order']} />\n\n        <Typography>Your Guess:</Typography>\n        <Order order={props.round['guesses']} />\n\n        <Typography>Spies Order:</Typography>\n        <Order order={props.round['spy_order']} />\n\n        <Typography>Your Spy Guess:</Typography>\n        <Order order={props.round['team_spy_guesses']} />\n      </Container>\n    );\n    clues.push(<Grid item key={randomKey()}><Typography>Your Clues:</Typography></Grid>);\n    props.round.clues.forEach(function (clue, idx) {\n      clues.push(<Grid item key={randomKey()}><Typography>{idx + 1}. {clue}</Typography></Grid>);\n    });\n    clues.push(<Grid item key={randomKey()}><Typography>Spy Clues:</Typography></Grid>);\n    props.round.spy_clues.forEach(function (clue, idx) {\n      clues.push(<Grid item key={randomKey()}><Typography>{idx + 1}. {clue}</Typography></Grid>)\n    });\n    clues = <Grid container direction=\"column\" justify=\"center\">{clues}</Grid>\n  } else {\n    clues = <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>;\n  }\n  return (\n    <ExpansionPanel expanded={props.expanded === props.round.number} onChange={props.handleExpansion(props.round.number)}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography color=\"textPrimary\" variant=\"h3\">Round {props.round.number + 1}</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Grid className={classes.card} spacing={2} container>\n          {order}\n          {clues}\n        </Grid>\n      {actions}\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  )\n}\n\nfunction Chat(props) {\n  let msgs = [];\n  props.chat.forEach(function (msg, idx) {\n    msgs.push(\n      <Container key={msg.date + msg.date.getMilliseconds() + msg.name + msg.chat}>\n        <Typography display='inline'>[{msg.date.getHours()}:{msg.date.getMinutes()}]</Typography>\n        <Typography display='inline'> <b>{msg.name}</b></Typography>\n        <Typography display='inline'>: {msg.message}</Typography>\n      </Container>)\n  });\n  let onEnterPressed = event => {\n    event.preventDefault();\n    if (event.key === 'Enter') {\n      props.sendchat(event.target.value);\n      event.target.value = null;\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Container id={props.id} className={props.className}>\n        {msgs}\n      </Container>\n      <TextField name='chat' fullWidth onKeyUp={onEnterPressed} autoComplete='off' label='Press enter to send chat...' margin='normal' />\n    </React.Fragment>\n  );\n}\n\nfunction ClueView(props) {\n  let contents = [];\n  for (var i = 0; i < props.clues.length; ++i) {\n    let inner = [];\n    for (var j = 1; j < props.clues[i].length; ++j) {\n      inner.push(\n        <TableCell key={j}>{props.clues[i][j] ? props.clues[i][j] : ''}</TableCell>\n      );\n    }\n    contents.push(\n      <TableRow key={i}>\n        {inner}\n      </TableRow>\n    )\n  }\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Word 1</TableCell>\n          <TableCell>Word 2</TableCell>\n          <TableCell>Word 3</TableCell>\n          <TableCell>Word 4</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {contents}\n      </TableBody>\n    </Table>\n  );\n}\n\nfunction TabPanel(props) {\n  return (\n    <Container hidden={props.value !== props.index}>\n      {props.children}\n    </Container>\n  );\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      team_a: new Set(),\n      team_b: new Set(),\n      players: new Set(),\n      me: '',\n      host: '',\n      state: 'setup',\n      s: null,\n      connected: false,\n      message: 'Select a team to join!',\n      words: [],\n      rounds: [],\n      drawer: false,\n      clues: [],\n      guesses: [],\n      spy_guesses: [],\n      score: null,\n      expanded: false,\n      tab: 0,\n      all_chat: [],\n      team_chat: [],\n      clue_view: [],\n      spy_clue_view: [],\n    };\n  }\n\n  onMessage(msg) {\n    console.log('Got server response:');\n    console.log(msg.data);\n    if (!msg.data) return;\n    let d = null;\n    try {\n      d = JSON.parse(msg.data);\n    } catch (e) {\n      console.log(e);\n      return;\n    }\n    if (!('command' in d)) {\n      console.log('No command in response from server. ' + msg);\n      return;\n    }\n\n    switch (d['command']) {\n      case 'error': {\n        console.log('ERROR: ' + d['msg']);\n        this.error(d['msg']);\n      } break;\n      case 'player_connected': {\n        let new_players = new Set(this.state.players);\n        new_players.add(d['player']);\n        this.setState({ players: new_players });\n        if (this.state.players.size === 1) {\n          this.setState({ me: d['player'] });\n        }\n      } break;\n      case 'player_disconnected': {\n        let new_players = new Set(this.state.players);\n        new_players.delete(d['player']);\n        this.setState({ players: new_players });\n        // on_player_disconnected(d['player']);\n      } break;\n      case 'joined_team': {\n        if (this.state.me === d['name']) {\n          this.setState({ message: 'Waiting for game to start...' });\n        }\n        if (d['team'] === 'a') {\n          let team = new Set(this.state.team_a);\n          team.add(d['name']);\n          this.setState({ team_a: team });\n        } else if (d['team'] === 'b') {\n          let team = new Set(this.state.team_b);\n          team.add(d['name']);\n          this.setState({ team_b: team });\n        } else {\n          console.log('ERROR: joined_team: invalid team: ' + d['team']);\n          return;\n        }\n      } break;\n      case 'left_team': {\n        if (d['team'] === 'a') {\n          let team = new Set(this.state.team_a);\n          team.delete(d['name']);\n          this.setState({ team_a: team });\n        } else if (d['team'] === 'b') {\n          let team = new Set(this.state.team_b);\n          team.delete(d['name']);\n          this.setState({ team_b: team });\n\n        } else {\n          console.log('ERROR: left_team: invalid team: ' + d['team']);\n          return;\n        }\n      } break;\n      case 'new_host': {\n        this.setState({ host: d['player'] });\n      } break;\n      case 'words': {\n        this.setState({ state: 'words' });\n        this.setState({ words: d['words'].slice(0) });\n      } break;\n      case 'round': {\n        let rounds = this.state.rounds.slice(0);\n        rounds[d['number']] = { ...rounds[d['number']], ...d };\n        if ('clues' in rounds[d['number']] && 'guesses' in rounds[d['number']]) {\n          this.setState({ rounds: rounds,\n            message: 'Guess the enemies order...',\n            spy_guesses: [],\n            expanded: d.number });\n        } else if ('clues' in rounds[d['number']]) {\n          this.setState({ rounds: rounds,\n            message: 'Match the clues with the word...',\n            guesses: [],\n            expanded: d.number });\n        } else {\n          this.setState({ rounds: rounds,\n            message: 'Waiting for clues...',\n            clues: [],\n            expanded: d.number });\n        }\n        if ('order' in d && 'spy_order' in d) {\n          let clue_view = this.state.clue_view;\n          let spy_clue_view = this.state.spy_clue_view;\n          let array = [];\n          let spy_array = [];\n          for (var i = 0; i < d.order.length; ++i) {\n            array[d.order[i]] = d.clues[i];\n            spy_array[d.spy_order[i]] = d.spy_clues[i];\n          }\n          clue_view[d.number] = array;\n          spy_clue_view[d.number] = spy_array;\n          this.setState({ clue_view: clue_view, spy_clue_view: spy_clue_view });\n        }\n      } break;\n      case 'order': {\n        let rounds = this.state.rounds.slice(0);\n        if (!rounds[d['number']]) {\n          rounds[d['number']] = {};\n        }\n        if ('order' in rounds[d['number']]) break;\n        rounds[d['number']]['order'] = d['order'];\n        this.setState({ rounds: rounds, message: 'Please give clues that match the order' });\n      } break;\n      case 'score': {\n        if ('winner' in d) {\n          this.setState({ score: d, message: d['winner'] + ' wins the game! The words are: Team A: ' + d.words.team_a + ' Team B:' + d.words.team_b });\n        } else if ('tie' in d) {\n          this.setState({ score: d, message: 'Game is a tie! The words are: Team A: ' + d.words.team_a + ' Team B:' + d.words.team_b });\n        } else {\n          this.setState({ score: d });\n        }\n      } break;\n      case 'team_chat': {\n        let chat = this.state.team_chat;\n        chat.push({date: new Date(), ...d});\n        this.setState({ team_chat: chat });\n        let e = document.getElementById('team_chat');\n        if (e.scrollTop >= e.scrollHeight - e.clientHeight - e.lastChild.clientHeight) {\n          e.scrollTop = e.scrollHeight;\n        }\n      } break;\n      case 'all_chat': {\n        let chat = this.state.all_chat;\n        chat.push({date: new Date(), ...d});\n        this.setState({ all_chat: chat });\n        let e = document.getElementById('all_chat');\n        if (e.scrollTop >= e.scrollHeight - e.clientHeight - e.lastChild.clientHeight) {\n          e.scrollTop = e.scrollHeight;\n        }\n      } break;\n      default: {\n        console.log('Unhandled: ' + d);\n      } break;\n    }\n  }\n\n  createSocket(props) {\n    let url = 'ws://' + document.domain + ':' + window.location.port + window.location.pathname + '/ws';\n    if (process.env.NODE_ENV === 'development') {\n      url = 'ws://' + document.domain + ':8080' + window.location.pathname + '/ws';\n    }\n    let s = new WebSocket(url);\n\n    s.onerror = function (e) {\n      console.log(\"ERROR:\");\n      console.log(e);\n    }\n\n    s.onmessage = msg => this.onMessage(msg);\n\n    s.onopen = _ => this.setState({ connected: true });\n    s.onclose = _ => this.setState({ connected: false });\n    return s;\n  }\n\n  componentDidMount() {\n    if (this.state.s === null) {\n      this.setState({ s: this.createSocket(this.props) });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.s === null) {\n      this.state.s.close();\n      this.setState({ s: null });\n    }\n  }\n\n  send(msg) {\n    if (!this.state.s || this.state.s.readyState !== this.state.s.OPEN) {\n      this.error('Websocket not connected! Try refreshing.');\n      return;\n    }\n    this.state.s.send(JSON.stringify(msg));\n  }\n\n  error(msg) {\n    let action = key => (\n      <Button onClick={() => { this.props.closeSnackbar(key) }}>\n        Dismiss <CancelIcon />\n      </Button>\n    );\n    this.props.enqueueSnackbar(msg, {\n      variant: 'error',\n      action\n    });\n  }\n\n  join_a() {\n    this.send({ 'command': 'join_a' });\n  }\n\n  join_b() {\n    this.send({ 'command': 'join_b' });\n  }\n\n  leave_team() {\n    this.send({ 'command': 'leave_team' });\n  }\n\n  start_game() {\n    this.send({ 'command': 'start_game' });\n  }\n\n  set_field(field, e) {\n    let obj = this.state[field];\n    let state = {};\n    if (e.target.type === 'number') {\n      obj[parseInt(e.target.name)] = parseInt(e.target.value);\n    } else {\n      obj[parseInt(e.target.name)] = e.target.value;\n    }\n    state[field] = obj;\n    this.setState(state);\n  }\n\n  submit_field(field, e) {\n    let obj = this.state[field];\n    if (obj.length !== 3) {\n      this.error('Only ' + obj.length + ' set!');\n      return;\n    }\n    if (!obj.reduce((c, v) => c && v, true)) {\n      this.error('Some ' + field + ' empty!');\n      return;\n    }\n    let state = {};\n    state[field] = [];\n    this.setState(state);\n    this.send({\n      'command': field,\n      [field]: obj,\n      'number': this.state.rounds.length - 1,\n    });\n  }\n\n  send_chat(command, message) {\n    this.send({command: command, message: message});\n  }\n\n  getClueGiver() {\n    if (this.state.state !== 'words') return null;\n    if (this.state.rounds.length === 0) return null;\n    return this.state.rounds[this.state.rounds.length - 1]['clue_giver'];\n  }\n\n  getSpyClueGiver() {\n    if (this.state.state !== 'words') return null;\n    if (this.state.rounds.length === 0) return null;\n    return this.state.rounds[this.state.rounds.length - 1]['spy_clue_giver'];\n  }\n\n  toggleDrawer() {\n    this.setState({ drawer: !this.state.drawer });\n  }\n\n  handleExpansion(round) {\n    let self = this;\n    return (event, isExpanded) => {\n      self.setState({ expanded: isExpanded ? round : false });\n    };\n  }\n\n  handleTabChange(event, newValue) {\n    this.setState({ tab: newValue });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    let team_a_jsx = [];\n    let team_b_jsx = [];\n    let host = this.state.host;\n    let me = this.state.me;\n    let clue_giver = this.getClueGiver();\n    let spy_clue_giver = this.getSpyClueGiver();\n    [[this.state.team_a, team_a_jsx], [this.state.team_b, team_b_jsx]].forEach(function (team) {\n      team[0].forEach(function (player) {\n        let show_badge = player === clue_giver || player === spy_clue_giver ? \"CG\" : 0;\n        let color = me === player ? \"textPrimary\" : \"textSecondary\";\n        team[1].push(\n          <Grid xs item key={player}>\n            <Badge badgeContent={show_badge} color=\"secondary\" className={classes.padding}>\n              <Typography component=\"h5\" align=\"center\" color={color} key={player}>{player}</Typography>\n            </Badge>\n            <Divider />\n          </Grid>);\n      });\n    });\n\n    let buttons = [];\n    let words = [];\n    if (this.state.state === 'setup') {\n      if ((this.state.team_a.has(this.state.me) || this.state.team_b.has(this.state.me))) {\n        buttons.push(<TeamLeaveButton key=\"leave\" onClick={this.leave_team.bind(this)} />);\n        if (this.state.me === host) {\n          buttons.push(<GameStartButton key=\"start\" onClick={this.start_game.bind(this)} />);\n        }\n      } else {\n        buttons = <TeamJoinButtons key=\"join\" team_a={this.join_a.bind(this)} team_b={this.join_b.bind(this)} />;\n      }\n    } else if (this.state.words.length > 0) {\n      this.state.words.forEach(function (word, idx) {\n        words.push(\n          <Grid item key={word}>\n            <Badge badgeContent={idx + 1} color=\"secondary\">\n              <Paper className={classes.card}>\n                <Typography component=\"h1\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                  {word}\n                </Typography>\n              </Paper>\n            </Badge>\n          </Grid>);\n      });\n    }\n\n    let rounds = [];\n    let self = this;\n    this.state.rounds.forEach(function (round) {\n      rounds.push(<Grid item key={round['number']}><Round\n        round={round} me={me} expanded={self.state.expanded} handleExpansion={self.handleExpansion.bind(self)}\n        setClues={self.set_field.bind(self, 'clues')}\n        submitClues={self.submit_field.bind(self, 'clues')}\n        setGuesses={self.set_field.bind(self, 'guesses')}\n        submitGuesses={self.submit_field.bind(self, 'guesses')}\n        setSpyGuesses={self.set_field.bind(self, 'spy_guesses')}\n        submitSpyGuesses={self.submit_field.bind(self, 'spy_guesses')} /></Grid>);\n    });\n\n    let score = [];\n    if (this.state.score) {\n      score = (\n        <Container>\n          <Grid container justify=\"center\" spacing={1}>\n            <Grid item>\n              <Paper className={classes.padding}>\n                <Typography variant=\"h6\">Team A</Typography>\n                <Typography>Intercepts: {this.state.score.team_a.intercepts}</Typography>\n                <Typography>Miscommunications: {this.state.score.team_a.miscommunications}</Typography>\n              </Paper>\n            </Grid>\n            <Grid item>\n              <Paper className={classes.padding}>\n                <Typography variant=\"h6\">Team B</Typography>\n                <Typography>Intercepts: {this.state.score.team_b.intercepts}</Typography>\n                <Typography>Miscommunications: {this.state.score.team_b.miscommunications}</Typography>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <MenuIcon className={classes.icon} onClick={this.toggleDrawer.bind(this)} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Decrypto\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer open={this.state.drawer} onClose={this.toggleDrawer.bind(this)}>\n          <Container>\n            <Paper>\n              <Typography component=\"h3\" variant=\"h5\" align=\"center\" color=\"textPrimary\" className={classes.teamName}>Team A</Typography>\n              {team_a_jsx}\n            </Paper>\n            <Paper>\n              <Typography component=\"h3\" variant=\"h5\" align=\"center\" color=\"textPrimary\" className={classes.teamName}>Team B</Typography>\n              {team_b_jsx}\n            </Paper>\n          </Container>\n        </Drawer>\n        <Dialog open={!this.state.connected}>\n          <DialogContent>\n            <Grid container justify=\"center\"><CircularProgress justify=\"center\" disableShrink /></Grid>\n            <Typography component=\"h2\" align=\"center\">Waiting for WebSocket connection...</Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={_ => window.location.reload(false)} color=\"primary\">\n              Refresh\n          </Button>\n          </DialogActions>\n        </Dialog>\n        <Container className={classes.heroContent}>\n          <Container>\n            {score}\n          </Container>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              {this.state.message}\n            </Typography>\n          </Container>\n          <Container className={classes.heroButtons}>\n            {buttons}\n          </Container>\n          <Container className={classes.icon}>\n            <Grid container spacing={2} justify=\"center\">\n              {words}\n            </Grid>\n          </Container>\n        </Container>\n        <Container>\n          {rounds}\n        </Container>\n        <Container className={classes.bottomBar}>\n          <AppBar position=\"static\">\n            <Tabs value={this.state.tab} onChange={this.handleTabChange.bind(this)}>\n              <Tab label=\"All Chat\" index={0} />\n              <Tab label=\"Team Chat\" index={1} />\n              <Tab label=\"Clue View\" index={2} />\n              <Tab label=\"Spy Clue View\" index={3} />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={this.state.tab} index={0}>\n            <Chat id='all_chat' className={classes.chatBox} sendchat={this.send_chat.bind(this, 'all_chat')} chat={this.state.all_chat} />\n          </TabPanel>\n          <TabPanel value={this.state.tab} index={1}>\n            <Chat id='team_chat' className={classes.chatBox} sendchat={this.send_chat.bind(this, 'team_chat')} chat={this.state.team_chat} />\n          </TabPanel>\n          <TabPanel value={this.state.tab} index={2}>\n            <ClueView clues={this.state.clue_view} />\n          </TabPanel>\n          <TabPanel value={this.state.tab} index={3}>\n            <ClueView clues={this.state.spy_clue_view} />\n          </TabPanel>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withSnackbar(withStyles(styles)(Game));\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Lobby from './components/lobby';\nimport Game from './components/game';\nimport { SnackbarProvider } from 'notistack';\n\nfunction App() {\n  return (\n    <SnackbarProvider maxSnack={3}>\n        <main>\n          <Router>\n            <Route exact path=\"/\" component={Lobby} />\n            <Route path=\"/game\" component={Game} />\n          </Router>\n        </main>\n    </SnackbarProvider>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}